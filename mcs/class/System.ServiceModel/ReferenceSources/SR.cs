//
// Resource strings referenced by the code.
//
// Copyright 2014 Xamarin Inc
//
// Use the following script to extract strings from .NET strings.resx:
//
// var d = XDocument.Load ("Strings.resx");
// foreach (var j in d.XPathSelectElements ("/root/data")){ var v = j.XPathSelectElement ("value"); Console.WriteLine ("\tpublic const string {0}=\"{1}\";", j.Attribute ("name").Value, v.Value); }
//
using System;
partial class SR
{
	public const string BindUriTemplateToNullOrEmptyPathParam = "BindUriTemplateToNullOrEmptyPathParam";
	public const string UTAdditionalDefaultIsInvalid = "Additional Defaults IsInvalid key: {0} template: {1}";
	public const string UTBadBaseAddress = "BadBaseAddress";
	public const string UTBindByNameCalledWithEmptyKey = "BindByNameCalledWithEmptyKey";
	public const string UTBindByPositionNoVariables = "BindByPositionNoVariables";
	public const string UTBindByPositionWrongCount = "BindByPositionWrongCount";
	public const string UTBothLiteralAndNameValueCollectionKey = "BothLiteralAndNameValueCollectionKey";
	public const string UTDefaultValueToCompoundSegmentVarFromAdditionalDefaults = "DefaultValueToCompoundSegmentVarFromAdditionalDefaults";
	public const string UTDefaultValueToQueryVar = "DefaultValueToQueryVar";
	public const string UTDefaultValueToQueryVarFromAdditionalDefaults = "DefaultValueToQueryVarFromAdditionalDefaults {0} does not contain {1}";
	public const string UTDefaultValuesAreImmutable = "DefaultValuesAreImmutable";
	public const string UTInvalidDefaultPathValue = "InvalidDefaultPathValue";
	public const string UTInvalidVarDeclaration = "InvalidVarDeclaration";
	public const string UTInvalidWildcardInVariableOrLiteral = "InvalidWildcardInVariableOrLiteral";
	public const string UTNullableDefaultAtAdditionalDefaults = "NullableDefaultAtAdditionalDefaults {0} does not contain {1}";
	public const string UTNullableDefaultMustBeFollowedWithNullables = "NullableDefaultMustBeFollowedWithNullables";
	public const string UTNullableDefaultMustNotBeFollowedWithLiteral = "NullableDefaultMustNotBeFollowedWithLiteral";
	public const string UTNullableDefaultMustNotBeFollowedWithWildcard = "NullableDefaultMustNotBeFollowedWithWildcard";
	public const string UTQueryCannotEndInAmpersand = "QueryCannotEndInAmpersand";
	public const string UTQueryCannotHaveEmptyName = "QueryCannotHaveEmptyName";
	public const string UTQueryMustHaveLiteralNames = "QueryMustHaveLiteralNames";
	public const string UTQueryNamesMustBeUnique = "QueryNamesMustBeUnique";
	public const string UTStarVariableWithDefaults = "StarVariableWithDefaults";
	public const string UTStarVariableWithDefaultsFromAdditionalDefaults = "StarVariableWithDefaultsFromAdditionalDefaults";
	public const string UTVarNamesMustBeUnique = "VarNamesMustBeUnique";
	public const string UTTDuplicate = "TDuplicate";
	public const string UTInvalidFormatSegmentOrQueryPart = "InvalidFormatSegmentOrQueryPart";
	public const string UTTOtherAmbiguousQueries = "TOtherAmbiguousQueries";
	public const string UTDefaultValueToCompoundSegmentVar = "DefaultValueToCompoundSegmentVar";
	public const string UTDoesNotSupportAdjacentVarsInCompoundSegment = "DoesNotSupportAdjacentVarsInCompoundSegment";
	public const string UTCSRLookupBeforeMatch = "CSRLookupBeforeMatch";
	public const string UTQueryCannotHaveCompoundValue = "QueryCannotHaveCompoundValue";
	public const string UTTAmbiguousQueries = "UTTAmbiguousQueries";
	public const string Addressing10ToStringFormat = "Addressing10ToStringFormat";
	public const string Addressing200408ToStringFormat = "Addressing200408ToStringFormat";
	public const string AddressingNoneToStringFormat = "AddressingNoneToStringFormat";
	public const string BodyWriterCanOnlyBeWrittenOnce = "BodyWriterCanOnlyBeWrittenOnce";
	public const string BodyWriterReturnedIsNotBuffered = "BodyWriterReturnedIsNotBuffered";
	public const string EncoderEnvelopeVersionMismatch = "EncoderEnvelopeVersionMismatch";
	public const string EnvelopeVersionUnknown = "EnvelopeVersionUnknown";
	public const string FaultConverterCreatedException = "FaultConverterCreatedException";
	public const string FaultConverterCreatedFaultMessage = "FaultConverterCreatedFaultMessage";
	public const string FaultConverterDidNotCreateException = "FaultConverterDidNotCreateException";
	public const string FaultConverterDidNotCreateFaultMessage = "FaultConverterDidNotCreateFaultMessage";
	public const string FilterNodeQuotaExceeded = "FilterNodeQuotaExceeded";
	public const string InvalidMessageState = "InvalidMessageState";
	public const string InvalidReaderPositionOnCreateMessage = "InvalidReaderPositionOnCreateMessage";
	public const string MessageBodyIsStream = "MessageBodyIsStream";
	public const string MessageBodyIsUnknown = "MessageBodyIsUnknown";
	public const string MessageBodyMissing = "MessageBodyMissing";
	public const string MessageBodyReaderInvalidReadState = "MessageBodyReaderInvalidReadState";
	public const string MessageBodyToStringError = "MessageBodyToStringError";
	public const string MessageClosed = "MessageClosed";
	public const string MessageHeaderVersionNotSupported = "MessageHeaderVersionNotSupported";
	public const string MessageVersionUnknown = "MessageVersionUnknown";
	public const string SFXHeaderNameCannotBeNullOrEmpty = "SFXHeaderNameCannotBeNullOrEmpty";
	public const string SeekableMessageNavBodyForbidden = "SeekableMessageNavBodyForbidden";
	public const string ValueMustBeNonNegative = "ValueMustBeNonNegative";
	public const string XmlBufferInInvalidState = "XmlBufferInInvalidState";
	public const string XmlBufferQuotaExceeded = "XmlBufferQuotaExceeded";
	public const string 	ActivityCallback = "	ActivityCallback";
	public const string ActivityProcessAction = "ActivityProcessAction";
	public const string MessageHasBeenCopied = "MessageHasBeenCopied";
	public const string MessageHasBeenRead = "MessageHasBeenRead";
	public const string MessageHasBeenWritten = "MessageHasBeenWritten";
	public const string MessageIsEmpty = "MessageIsEmpty";
	public const string QueryItemAlreadyExists = "QueryItemAlreadyExists";
	public const string RequestMessageDoesNotHaveAMessageID = "RequestMessageDoesNotHaveAMessageID";
	public const string SFxUserCodeThrewException = "SFxUserCodeThrewException";
	public const string SeekableMessageNavIDNotSupported = "SeekableMessageNavIDNotSupported";
	public const string SeekableMessageNavInvalidPosition = "SeekableMessageNavInvalidPosition";
	public const string SeekableMessageNavNonAtomized = "SeekableMessageNavNonAtomized";
	public const string SeekableMessageNavOverrideForbidden = "SeekableMessageNavOverrideForbidden";
	public const string TraceCodeConnectToIPEndpoint = "TraceCodeConnectToIPEndpoint";
	public const string TraceCodeDroppedAMessage = "TraceCodeDroppedAMessage";
	public const string TraceCodeFailedToAddAnActivityIdHeader = "TraceCodeFailedToAddAnActivityIdHeader";
	public const string TraceCodeMessageClosed = "TraceCodeMessageClosed";
	public const string TraceCodeMessageClosedAgain = "TraceCodeMessageClosedAgain";
	public const string TraceCodeMessageCopied = "TraceCodeMessageCopied";
	public const string TraceCodeMessageRead = "TraceCodeMessageRead";
	public const string TraceCodeMessageWritten = "TraceCodeMessageWritten";
	public const string TraceCodeFailedToReadAnActivityIdHeader = "TraceCodeFailedToReadAnActivityIdHeader";
	public const string TraceCodeUnhandledExceptionInUserOperation = "TraceCodeUnhandledExceptionInUserOperation";
	public const string Soap11ToStringFormat = "Soap11ToStringFormat";
	public const string Soap12ToStringFormat = "Soap12ToStringFormat";
	public const string EnvelopeNoneToStringFormat = "EnvelopeNoneToStringFormat";
	public const string AddressingExtensionInBadNS = "AddressingExtensionInBadNS";
	public const string AddressingVersionNotSupported = "AddressingVersionNotSupported";
	public const string CannotDetectAddressingVersion = "CannotDetectAddressingVersion";
	public const string InvalidUriValue = "InvalidUriValue";
	public const string InvalidXmlQualifiedName = "InvalidXmlQualifiedName";
	public const string MultipleIdentities = "MultipleIdentities";
	public const string SFxNone2004 = "SFxNone2004";
	public const string UnboundPrefixInQName = "UnboundPrefixInQName";
	public const string UnexpectedDuplicateElement = "UnexpectedDuplicateElement";
	public const string UnexpectedElementExpectingElement = "UnexpectedElementExpectingElement";
	public const string UriMustBeAbsolute = "UriMustBeAbsolute";
	public const string XmlLangAttributeMissing = "XmlLangAttributeMissing";
	public const string InvalidIdentityElement = "InvalidIdentityElement";
	public const string UnexpectedEmptyElementExpectingClaim = "UnexpectedEmptyElementExpectingClaim";
	public const string UnrecognizedIdentityPropertyType = "UnrecognizedIdentityPropertyType";
	public const string UnrecognizedIdentityType = "UnrecognizedIdentityType";
	public const string X509ChainIsEmpty = "X509ChainIsEmpty";
	public const string AddressingHeadersCannotBeAddedToAddressingVersion = "AddressingHeadersCannotBeAddedToAddressingVersion";
	public const string DuplicateMessageProperty = "DuplicateMessageProperty";
	public const string FilterQuotaRange = "FilterQuotaRange";
	public const string HeaderAlreadyNotUnderstood = "HeaderAlreadyNotUnderstood";
	public const string HeaderAlreadyUnderstood = "HeaderAlreadyUnderstood";
	public const string HeaderNotFound = "HeaderNotFound";
	public const string HeadersCannotBeAddedToEnvelopeVersion = "HeadersCannotBeAddedToEnvelopeVersion";
	public const string InvalidEnumValue = "InvalidEnumValue";
	public const string MessageBufferIsClosed = "MessageBufferIsClosed";
	public const string MessageHeaderVersionMismatch = "MessageHeaderVersionMismatch";
	public const string MessagePropertiesArraySize0 = "MessagePropertiesArraySize0";
	public const string MessagePropertyNotFound = "MessagePropertyNotFound";
	public const string MessagePropertyReturnedNullCopy = "MessagePropertyReturnedNullCopy";
	public const string MultipleMessageHeaders = "MultipleMessageHeaders";
	public const string MultipleMessageHeadersWithActor = "MultipleMessageHeadersWithActor";
	public const string MultipleRelatesToHeaders = "MultipleRelatesToHeaders";
	public const string ObjectDisposed = "ObjectDisposed";
	public const string OnlyMalformedMessagesAreSupported = "OnlyMalformedMessagesAreSupported";
	public const string PartialTrustMessageLoggingNotEnabled = "PartialTrustMessageLoggingNotEnabled";
	public const string SFxDeserializationFailed1 = "SFxDeserializationFailed1";
	public const string SFxDocEncodedNotSupported = "SFxDocEncodedNotSupported";
	public const string SFxErrorDeserializingReplyBodyMore = "SFxErrorDeserializingReplyBodyMore";
	public const string SFxErrorDeserializingRequestBodyMore = "SFxErrorDeserializingRequestBodyMore";
	public const string SFxHeaderNotUnderstood = "SFxHeaderNotUnderstood";
	public const string SFxInvalidMessageBody = "SFxInvalidMessageBody";
	public const string SFxInvalidMessageBodyErrorDeserializingParameter = "SFxInvalidMessageBodyErrorDeserializingParameter";
	public const string SFxInvalidMessageBodyErrorDeserializingParameterMore = "SFxInvalidMessageBodyErrorDeserializingParameterMore";
	public const string SFxInvalidMessageBodyErrorSerializingParameter = "SFxInvalidMessageBodyErrorSerializingParameter";
	public const string SFxInvalidStreamInRequest = "SFxInvalidStreamInRequest";
	public const string SFxInvalidStreamInResponse = "SFxInvalidStreamInResponse";
	public const string SFxInvalidStreamInTypedMessage = "SFxInvalidStreamInTypedMessage";
	public const string SFxInvalidStreamOffsetLength = "SFxInvalidStreamOffsetLength";
	public const string SFxKnownTypeNull = "SFxKnownTypeNull";
	public const string SFxMessageContractRequiresDefaultConstructor = "SFxMessageContractRequiresDefaultConstructor";
	public const string SFxStreamIOException = "SFxStreamIOException";
	public const string SFxStreamRequestMessageClosed = "SFxStreamRequestMessageClosed";
	public const string SFxStreamResponseMessageClosed = "SFxStreamResponseMessageClosed";
	public const string SFxTraceCodeElementIgnored = "SFxTraceCodeElementIgnored";
	public const string SFxTypedMessageCannotBeNull = "SFxTypedMessageCannotBeNull";
	public const string SFxTypedMessageCannotBeRpcLiteral = "SFxTypedMessageCannotBeRpcLiteral";
	public const string SFxTypedOrUntypedMessageCannotBeMixedWithParameters = "SFxTypedOrUntypedMessageCannotBeMixedWithParameters";
	public const string SFxTypedOrUntypedMessageCannotBeMixedWithVoidInRpc = "SFxTypedOrUntypedMessageCannotBeMixedWithVoidInRpc";
	public const string TraceCodeDidNotUnderstandMessageHeader = "TraceCodeDidNotUnderstandMessageHeader";
	public const string TraceCodeFilterNotMatchedNodeQuotaExceeded = "TraceCodeFilterNotMatchedNodeQuotaExceeded";
	public const string TraceCodeMessageCountLimitExceeded = "TraceCodeMessageCountLimitExceeded";
	public const string TraceCodeUnderstoodMessageHeader = "TraceCodeUnderstoodMessageHeader";
	public const string ValueMustBeInRange = "ValueMustBeInRange";
	public const string ActivityBoundary = "ActivityBoundary";
	public const string AttemptedToGetContractTypeForButThatTypeIs1 = "AttemptedToGetContractTypeForButThatTypeIs1";
	public const string InvalidAsyncBeginMethodSignatureForMethod2 = "InvalidAsyncBeginMethodSignatureForMethod2";
	public const string InvalidAsyncEndMethodSignatureForMethod2 = "InvalidAsyncEndMethodSignatureForMethod2";
	public const string MoreThanOneEndMethodFoundForAsyncBeginMethod3 = "MoreThanOneEndMethodFoundForAsyncBeginMethod3";
	public const string NoEndMethodFoundForAsyncBeginMethod3 = "NoEndMethodFoundForAsyncBeginMethod3";
	public const string SFXUnvalidNamespaceParam = "SFXUnvalidNamespaceParam";
	public const string SFXUnvalidNamespaceValue = "SFXUnvalidNamespaceValue";
	public const string SFxBadByReferenceParameterMetadata = "SFxBadByReferenceParameterMetadata";
	public const string SFxBadByValueParameterMetadata = "SFxBadByValueParameterMetadata";
	public const string SFxContractInheritanceRequiresInterfaces = "SFxContractInheritanceRequiresInterfaces";
	public const string SFxContractInheritanceRequiresInterfaces2 = "SFxContractInheritanceRequiresInterfaces2";
	public const string SFxDisallowedAttributeCombination = "SFxDisallowedAttributeCombination";
	public const string SFxErrorReflectingOnMethod3 = "SFxErrorReflectingOnMethod3";
	public const string SFxErrorReflectingOnParameter4 = "SFxErrorReflectingOnParameter4";
	public const string SFxErrorReflectingOnType2 = "SFxErrorReflectingOnType2";
	public const string SFxErrorReflectionOnUnknown1 = "SFxErrorReflectionOnUnknown1";
	public const string SFxNoMostDerivedContract = "SFxNoMostDerivedContract";
	public const string ServicesWithoutAServiceContractAttributeCan2 = "ServicesWithoutAServiceContractAttributeCan2";
	public const string couldnTFindRequiredAttributeOfTypeOn2 = "couldnTFindRequiredAttributeOfTypeOn2";
	public const string tooManyAttributesOfTypeOn2 = "tooManyAttributesOfTypeOn2";
	
	public static string GetString (string key, params object [] args)
	{
		if (args.Length == 0)
			return key;
		return String.Format (key, args);
	}
}
