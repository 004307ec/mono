
Fri Jul 26 11:58:22 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: load constant strings.

Fri Jul 26 11:36:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: no magic numbers.
	* tabledefs.h: security action enum.

Fri Jul 26 11:22:52 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c: fix possible memory corruption.

Thu Jul 25 13:58:38 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: added support for linking resources.
	* verify.c: check we have an updated corlib.

2002-07-25  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_native_wrapper): correctly marshal
	string arrays.
	(mono_marshal_string_array): null terminate unmanaged string arrays.
	(mono_marshal_get_managed_wrapper): print warning for arrays (not implemented)

Wed Jul 24 13:32:36 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: Type.GetType () can now return also types from the
	calling assembly.

Wed Jul 24 13:04:05 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* loader.h, loader.c: stack walking support.
	* icall.c: implemented GetCurrentMethod, GetExecutingAssembly,
	GetCallingAssembly.

2002-07-24  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c: added optimisations for blittable types 

	* class.c (mono_array_class_get): do not set blittable attribute on arrays
	(mono_class_setup_mono_type): set blittable attribute for single
	and double.

	* marshal.c (mono_string_utf8_to_builder): impl.
	(mono_string_builder_to_utf8): impl.
	(mono_marshal_get_native_wrapper): impl. StringBuilder marshaling

2002-07-23  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_native_wrapper): impl. byref types
	(mono_marshal_get_managed_wrapper): impl. byref types

2002-07-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* icall.c:
	(search_method): don't display debug message. 

2002-07-22  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_type_stack_size): removed temporary fix for new gcc

Mon Jul 22 18:17:05 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c: set the missing filename when throwing exception.

2002-07-22  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_type_size): code cleanup
	(mono_type_stack_size): removed some test code

2002-07-21  Miguel de Icaza  <miguel@ximian.com>

	* appdomain.c (ves_icall_System_Reflection_Assembly_LoadFrom): Use
	mono_get_exception_file_not_found now.

	* exception.c (mono_exception_from_name_two_strings): New version
	that will call a constructor with two string arguments. 
	(mono_get_exception_file_not_found): New helper routine, used to
	report file-not-found errors.

2002-07-20  Dick Porter  <dick@ximian.com>

	* process.h:
	* process.c: Pass file handles to CreateProcess
	
	* icall.c:
	* file-io.h:
	* file-io.c: Implemented CreatePipe

2002-07-19  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_get_param_info): set alignment for value types

Fri Jul 19 18:58:27 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.h, domain.c, threads-types.h: don't include config.h in headers.
	Constify mono_domain_assembly_open().
	* loader.c: handle null namespace in icalls.

2002-07-19  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (emit_ptr_to_str_conv): marshal object as structs
	(emit_str_to_ptr_conv): marshal object as structs

	* metadata.c (mono_type_to_unmanaged): marshal object as structs

	* marshal.c (mono_marshal_get_runtime_invoke): support value types

2002-07-18  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_runtime_invoke): use exception filters
	(mono_marshal_get_native_wrapper): we an now return value types

Wed Jul 17 18:21:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* verify.c: more checks implemented.

2002-07-17  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_delegate_to_ftnptr): invoke the right method
	(fix bug #27695)
	(mono_marshal_get_native_wrapper): allow byref arguments
	(ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringXXX):
	impl. PtrToStringXXX methods
	(ves_icall_System_Runtime_InteropServices_Marshal_PtrToStructure_type): impl.
	(ves_icall_System_Runtime_InteropServices_Marshal_OffsetOf): impl.
	(ves_icall_System_Runtime_InteropServices_Marshal_StringToHGlobalAnsi): impl.
	(ves_icall_System_Runtime_InteropServices_Marshal_StringToHGlobalUni): impl.
	(ves_icall_System_Runtime_InteropServices_Marshal_DestroyStructure): impl.

Tue Jul 16 19:00:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix buglet in parsing an assembly name.

2002-07-16  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (emit_ptr_to_str_conv): first impl.

Tue Jul 16 12:39:33 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c, class.h: cache the vtable in the class as suggested by
	vargaz@freemail.hu (Zoltan Varga).

Tue Jul 16 11:27:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.h, loader.c: added mono_field_from_token().
	* verify.c: first cut of type checking code.

2002-07-16  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_native_wrapper): support valuetypes

2002-07-15  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_native_wrapper): handle enum types
	(fix bug #27782)
	(mono_marshal_get_remoting_invoke): impl.
	(mono_delegate_begin_invoke): impl.
	(mono_mb_emit_save_args): impl.
	(mono_delegate_end_invoke): impl.
	(mono_marshal_get_delegate_begin_invoke):
	(mono_marshal_get_delegate_end_invoke):
	(mono_marshal_get_delegate_invoke): generate a special name for
	those methods (including the signature) and associate them whith
	the delegate class. 

2002-07-13  Gonzalo Paniagua Javier <gonzalo@gnome-db.org>

	* reflection.[ch]: 
	(mono_reflection_type_from_name): now it has a MonoImage parameter
	which is used as the default image to search the type in. If the image
	is NULL or getting the type from it fails, it defaults to corlib.

	* icall.c: changed 1 call to mono_reflection_type_from_name to match
	new parameter.

Sat Jul 13 19:32:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: update the parameter table index.

Sat Jul 13 17:34:23 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* domain.c: don't include the mark byte in the string hash.

Sat Jul 13 15:06:23 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.cs: icall for Type.GetTypeCode ().
	* verify: a couple of fixes and disabled local initialization checks.

2002-07-12  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c: better debugging support (DEBUG_RUNTIME_CODE)

	* debug-helpers.c (mono_method_full_name): print the type of the
	runtime wrapper

	* metadata.c (mono_signature_hash): a hash function for signatures
	(mono_signature_hash): better hash algorithm

	* marshal.c (mono_marshal_get_delegate_invoke): cache methods by signature

	* debug-helpers.c (mono_method_full_name): this can now generate
	method names with signatures

	* marshal.c (mono_marshal_get_managed_wrapper): bug fix: unmanaged
	method dont have this pointers.

Fri Jul 12 11:35:48 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fixup typebuilder tokens.
	* image.c: fix buglet.
	* marshal.h: remove whitespace.
	* metadata.h, metadata.c: reinstate code that was removed.
	* verify.c: handle catch directives and fix another couple of bugs.

2002-07-11  Dietmar Maurer  <dietmar@ximian.com>

	* marshal.c (mono_marshal_get_native_wrapper): support BOOLEAN
	(mono_marshal_get_native_wrapper): make it comp. with the old code
	(mono_marshal_get_native_wrapper): support boolean
	(mono_marshal_get_managed_wrapper): support more types

2002-06-25  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (class_compute_field_layout): compute class->blittable attribute.

2002-07-09  Dick Porter  <dick@ximian.com>

	* threads.c: Make the thread cleaning up cope with threads that
	call ExitThread()

2002-07-08  Radek Doulik  <rodo@ximian.com>

	* reflection.c (method_encode_code): use non-translated values to
	compute finally_start, this fixes exception handling on ppc, yay!

	* decimal.h (struct signscale): fix endianess

2002-07-07  Radek Doulik  <rodo@ximian.com>

	* reflection.c: swap box_val and not val

Mon Jul 8 15:18:59 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c, reflection.h: handle full assembly info in type name.
	Handle Type arguments when loading custom attributes.
	* icall.c: updated to use new mono_reflection_type_from_name () method.

2002-07-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* loader.c:
	(method_from_memberref): also print assembly name when method not found.

2002-07-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* icall.c:
	(ves_icall_TypeGetProperties): fixed bug #27473. 

2002-07-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* reflection.c: display image name and token when cannot find the
	.ctor for an attribute.

2002-07-05  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c: Reflect latest MonoDwarfFileWriter changes.

2002-07-04  Dick Porter  <dick@ximian.com>

	* threads.c (mono_thread_cleanup): Nasty kludge to get this to
	compile on mingw.  This will cause mingw builds to not wait for
	subthreads to terminate after the main thread does.  I've lodged a
	bug with the mingw developers for them to wrap OpenThread().

2002-07-03  Dick Porter  <dick@ximian.com>

	* threads.c: Store thread IDs instead of handles, because
	GetCurrentThread() returns a pseudohandle and therefore stores
	useless values.  mono_thread_cleanup() continues checking the
	array of threads until it is empty, to cope with subthreads
	spawning new threads after the main thread has finished.

	* profiler.h:
	* profiler.c:
	* profiler-private.h: Pass the thread ID to thread profiler
	functions, instead of a handle

Wed Jul 3 17:43:52 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* verify.c: fixes to make it more usable.
	* pedump.c: added --verify code to verify IL code in an assembly.

Tue Jul 2 20:40:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: turn errors into warnings to allow compiling corlib.

Tue Jul 2 19:33:20 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: add special cases to compile corlib.

Mon Jul 1 18:00:40 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: handle properties with only a set method.

Mon Jul 1 17:11:11 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* opcodes.h: add enum with opcodes in opval order.

2002-07-01  Dick Porter  <dick@ximian.com>
	
	* object.h:
	* object.c (mono_runtime_run_main): Removed unneeded argument

2002-06-28  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c: Reflect latest MonoDwarfFileWriter changes.

2002-06-27  Dick Porter  <dick@ximian.com>

	* threads.c: Store the handle in both the parent thread and in the
	subthread, to minimise the time between starting a new thread and
	storing its ID.

2002-06-26  Dick Porter  <dick@ximian.com>

	* appdomain.c (mono_runtime_cleanup): Close the socket library
	after all the threads have finished, not before

2002-06-26  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_find_source_location): Added
	`guint32 *line_number' argument.  If it's not NULL, store the line number
	there and return the file name without the line number.

2002-06-25  Dick Porter  <dick@ximian.com>

	* icall.c:
	* process.h:
	* process.c: Process forking and other support functions

2002-06-25  Dick Porter  <dick@ximian.com>

	* image.c (do_mono_image_open): Set ref_count to 1, so that bad
	things dont happen when the image is closed.
	(mono_image_lookup_resource): Walk the resource section looking
	for a particular entry

	* cil-coff.h: PE resource section decoding

2002-06-25  Dick Porter  <dick@ximian.com>
	
	* assembly.h:
	* assembly.c: 
	(mono_assembly_foreach): Accessor functions to walk the list of
	loaded assemblies
	(mono_assembly_set_main):
	(mono_assembly_get_main): Process methods need to know which
	assembly is the "main" one

	* object.c (mono_runtime_run_main): Record the main assembly

	* debug-helpers.c: Fix typo

2002-06-24  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_System_Runtime_InteropServices_Marshal_copy_to_unmanaged): impl.
	(ves_icall_System_Runtime_InteropServices_Marshal_copy_from_unmanaged): impl.

Sat Jun 22 11:37:25 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: fix off-by-one in Assembly.GetTypes() reported by bob@karr.ath.cx.

2002-06-21  Miguel de Icaza  <miguel@ximian.com>

	* image.c (do_mono_image_open): Initialize reference count,
	otherwise we leak the MonoImage.

Fri Jun 21 19:16:47 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: small tweak to handle self-hosting.

Thu Jun 20 23:28:13 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix type name parse code.

Thu Jun 20 19:24:32 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: break out of the loop.
	* image.c: special case corlib.

Thu Jun 20 16:43:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: add all the custom attrs at the end to ensure the
	ctors have been properly initialized when the attributes are defined
	in the current assembly.

Thu Jun 20 13:46:40 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: handle correctly multiple-nested types.

Thu Jun 20 11:49:00 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* row-indexes.h: fix typos.
	* reflection.c: adjust for typos and fix method_def_or_ref
	encoding in MethodImpl table.

Wed Jun 19 21:57:30 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix entry point patching (thanks Serge!).

2002-06-18  Dietmar Maurer  <dietmar@ximian.com>

	* verify.c: add check for System.Exception

Mon Jun 17 20:23:23 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* image.c, class.c: minifix for code just c&p'ed.
	* reflection.c: warning fix.
	* object.h, loader.h, domain.c: load also StringBuilder.

Mon Jun 17 17:29:40 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* marshal.h, marshal.c: some support code to handle complex marshaling.

Mon Jun 17 16:32:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c, reflection.c: handle ignorecase in GetType ().
	Better signatures with vtable error dump.

Mon Jun 17 16:13:35 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c, reflection.h, icall.c: fixes for multiple-nested types.

2002-06-17  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_Type_GetField): impl.

Mon Jun 17 16:08:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c: added mono_metadata_get_marshal_info()
	to retrieve a marshal description blob for a field or param.

Mon Jun 17 14:57:03 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: change order of nested type emission
	to avoid table corruption. The NestedTypes table is sorted.
	* icall.c: change order of GetConstructor results to workaround mcs bug.

Fri Jun 14 16:24:30 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: handle field and param marshal
	information.

Wed Jun 12 16:30:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c, marshal.c marshal.h: more Marshal class implementation.

Tue Jun 11 17:29:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix call convention.

Tue Jun 11 16:52:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: mono_image_get_memberref_token()
	takes a type instead of a class, now. Added
	mono_image_get_array_token() to create tokens for the special
	multi-dim array methods.

Tue Jun 11 13:21:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c: handle modules (no assembly table). Split
	loading references in its own function.
	* class.c: handle moduleref resolution scope.
	* image.c, image.h: cache module name in image.

2002-06-07  Martin Baulig  <martin@gnome.org>

	* reflection.c (mono_image_get_type_info): Only add a class layout entry
	if we actually have a `tb->class_size' (ie. it's not UnspecifiedTypeSize).

Fri Jun 7 22:07:25 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: more signature fixes that used uint instead of int.

Fri Jun 7 20:41:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fixed signature of field refs.

Fri Jun 7 19:41:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.c, reflection.c: handle typerefs of nested types
	(both on read and when writing files).

Fri Jun 7 17:46:50 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: fix method signatures that tried to workaround the previous
	typo, d'oh!

Fri Jun 7 17:36:33 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* debug-helpers.c: fix typo.

Fri Jun 7 17:00:04 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* cil-coff.h, icall.c, image.c, reflection.c, reflection.h:
	rewrote the PE/COFF writing code (our programs are understood by the
	ms runtime, now).

Tue Jun 4 18:10:47 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* gc.c, gc.h, icall.c: weakreference support.

Tue Jun 4 16:06:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* Makefile.am, mono-config.c: use $(sysconfdir).

Mon Jun 3 13:13:32 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: changed default precision of Double.ToString() to 15.
	Fixed memory leak. Unified with Single.ToString.

Sat Jun 1 14:26:45 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* sysmath.c: workaround systems missing NAN and/or HUGE_VAL.

Sat Jun 1 13:46:54 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* pedump.c, appdomain.c, appdomain.h, assembly.c, domain.c,
	gc.c, icall.c, image.c, mono-config.c, reflection.c: killed
	warnings and compilation fixes from Dennis Haney (davh@davh.dk)
	and myself.

Fri May 31 16:58:36 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* debug-symfile.c, sysmath.c: yet more compilation fixes.

Fri May 31 16:35:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c, socket-io.c: more compilation fixes.

Fri May 31 15:58:22 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c, class.c, class.h, debug-symfile.c, decimal.c,
	domain.c, loader.c, object.c, object.h, reflection.c, string-icalls.h,
	unicode.c: warning and compiler compatibility fixes.

Fri May 31 15:36:53 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.h, metadata.c: fixed warnings/compilation errors.

Fri May 31 13:08:25 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* Makefile.am, mono-config.c, mono-config.h: configuration file
	support routines.
	* loader.c, loader.h: make Dll mapping configurable at runtime in the
	config file. Export methods to insert and lookup mappings.

Fri May 31 12:45:38 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: handle types and boxed objects in custom attr
	constructors.

2002-05-30  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c
	(ves_icall_Debugger_MonoSymbolWriter_method_builder_from_token): Removed.

Thu May 30 14:15:02 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.c, metadata.h: added mono_metadata_implmap_from_method()
	to lookup the implmap row for a P/Invoke method.
	* loader.c: added mono_lookup_pinvoke_call(): we only lookup a
	P/Invoke method from the runtime on an as needed basis.

2002-05-28  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_metadata_parse_signature): impl.

Tue May 28 16:02:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: handle .pack directive.

Tue May 28 11:04:46 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: initialize static fields with RVA data.

2002-05-25  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c
	(ves_icall_Debugger_DwarfFileWriter_get_type_token): Removed.

2002-05-24  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c
	(ves_icall_Debugger_MonoSymbolWriter_get_local_type_from_sig): Removed.
	(ves_icall_Debugger_MonoSymbolWriter_method_from_token): Renamed to
	`ves_icall_Debugger_MonoSymbolWriter_method_builder_from_token'.

Thu May 23 18:44:37 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: special case string ctros in invoke.
	* gc.c: silly whitespace changes.

2002-05-23  Dietmar Maurer  <dietmar@ximian.com>

	* threadpool.[ch]: impl. a threadpool that can
	be used by mint and mono.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (ves_icall_Debugger_MonoSymbolWriter_method_from_token):
	The first argument is now a `MonoReflectionModuleBuilder *', the return
	value is a `MonoReflectionModuleBuilder *'.  Use the AssemblyBuilder's
	`methods' field to get the method builder.  The `token' argument is the
	unfixed token.

	* unicode.c (iconv_get_length, iconv_convert): Silently ignore all
	invalid characters instead of g_assert_not_reached()ing.  This seems
	to be the behaviour of mscorlib.

2002-05-22  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_runtime_invoke_array): applied patch from Rachel
	Hestilow to fix bug #25104

2002-05-21  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_find_source_location): New function.
	Looks up an IL offset in the line number table and returns the source
	location as a string.

2002-05-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* icall.c:
	(mono_double_ToStringImpl): changed %f by %g until we have something
	better.

2002-05-21  Nick Drochak  <ndrochak@gol.com>

	* icall.c : Use different name for Math.Pow's icall.  Needed to check
	parameters first in C#.

Mon May 20 17:36:36 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c, reflection.h: added icall to get info about an event.

2002-05-20  Radek Doulik  <rodo@ximian.com>

	* object.c (mono_value_box): don't use memcpy for boxing on BIG
	endian
	(mono_value_box): don't use memcpy for small sizes on
	architectures with unaligned access

2002-05-20  Martin Baulig  <martin@gnome.org>

	* reflection.c (mono_reflection_setup_internal_class): Don't crash
	if `tb->parent == NULL'.
	(mono_reflection_create_internal_class): New function.  This is
	called from TypeBuilder.CreateType() and sets `klass->enum_basetype'
	for enum types.

	* icall.c ("System.Reflection.Emit.TypeBuilder::create_internal_class"):
	New interncall.

2002-05-19  Martin Baulig  <martin@gnome.org>

	* unicode.c (ves_icall_iconv_get_bytes): Actually use the `charCount'
	argument to get the length, don't default to the array length.

2002-05-18  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c (mono_assembly_setrootdir): New function used to
	override the MONO_ASSEMBLIES directory.

Fri May 17 20:39:53 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: ValueType_GetHashCode() initialize local var.

Thu May 16 17:20:22 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: sort custom attributes table.

Thu May 16 16:08:01 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: support named args in custom attributes (write support).

Thu May 16 13:04:59 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix finally position calculation.

2002-05-15  Radek Doulik  <rodo@ximian.com>

	* reflection.c: fixed endianess at many places

	* icall.c (ves_icall_InitializeArray): comment out debug msg

2002-05-15  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_unhandled_exception): new function to handle
	unhandled exceptions.
	(mono_unhandled_exception): call the UnhandledException event.
	(mono_runtime_delegate_invoke): impl.

Wed May 15 15:59:55 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c, class.c: mono_metadata_field_info ()
	returns the RVA, not the direct pointer to the data. Handle the case
	when the class size is fixed.

Tue May 14 16:59:44 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fix some endianess issues.

2002-05-14  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_runtime_invoke): is now able to catch exceptions.

	* threads.c (mono_thread_init): added a callback which is invoked
	at thread start.

2002-05-14  Dan Lewis  <dihlewis@yahoo.co.uk>
	
	* icall.c: make GetHashCode return non-negative values.

2002-05-14  Dan Lewis  <dihlewis@yahoo.co.uk>

	* object.c, icall.c, gc.c: revert to address-based hashcode.

2002-05-13  Miguel de Icaza  <miguel@ximian.com>

	* icall.c (mono_double_ParseImpl): Added ParseImpl method.

Mon May 13 16:40:30 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c, class.c: special case <Module>.

2002-05-13  Dan Lewis  <dihlewis@yahoo.co.uk>

	* icall.c: fix bug in GetNow().

2002-05-11  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_runtime_class_init): make sure that we call all
	static class constructors.

Fri May 10 18:14:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: sort methodsemantics table.

Fri May 10 16:31:49 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: honour init locals setting.

Thu May 9 18:50:00 EDT 2002 Daniel Morgan <danmorg@sc.rr.com>

	* icall.c: copied Double ToStringImpl for Single ToStringImpl

Wed May 8 12:28:28 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: support ContructorBuilders in attribute blob creation.

Wed May 8 12:06:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: some changes to build a binary that can be run
	directly in windows.

Mon May 6 13:10:34 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* loader.c: print a big message when an icall can't be found.

2002-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* string-icalls.c: fix bug 24248.

Sat May 4 14:03:21 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c, appdomain.h, assembly.c, assembly.h, image.h,
	icall.c, reflection.h: separate assembly loading by pathname and by
	assembly name. Use the MONO_PATH env var to search for assemblies.

Thu May 2 17:56:52 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c, image.h: add some support for assemblies
	with multiple modules.
	* class.c, class.h: export mono_class_from_typeref().
	* loader.c: remove duplicated code and use mono_class_from_typeref(),
	instead.

Thu May 2 15:51:11 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* unicode.c: Char.IsNumber doesn't include hex digits as the ms
	documentation says (the ECMA one is correct).

2002-05-02  Dick Porter  <dick@ximian.com>

	* threads.c: Use GC_debug_register_finalizer with GC_debug_malloc.
	Don't name the synchronisation mutex.

2002-04-30  Jeffrey Stedfast  <fejj@ximian.com>

	* rand.c
	(ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_GetBytes):
	Make the prototypes match.
	(ves_icall_System_Security_Cryptography_RNGCryptoServiceProvider_GetNonZeroBytes):
	Same.

	* icall.c
	(ves_icall_System_CurrentTimeZone_GetTimeZoneData): Fixed for
	systems that use 'timezone' rather than tm.tm_gmtoff. Also, not
	all systems have tm.tm_zone, so use strftime() with %Z to print
	the timezone abreviation into a temp string.

	* object.c (mono_ldstr): Fixed to use mono_string_chars() macro
	rather than mono_array_addr() on a MonoString on Big Endian
	machines.

2002-04-30  Dietmar Maurer  <dietmar@ximian.com>

	* string-icalls.c (ves_icall_System_String_InternalReplace_Str):
	fix bug 24041

2002-04-30  Dick Porter  <dick@ximian.com>

	* socket-io.c: Cope with SOCKET being an integer rather than a
	pointer now.

	* threads.c: Added Thread_free_internal, to deal with thread
	handle cleanup.  Moved calls to handle_store() and handle_remove()
	to start_wrapper(), so each can only be called once.  Allocate
	synchronisation blocks with GC_malloc(), and use GC finalisation
	to close the handles.

	* icall.c: added System.Threading.Thread::Thread_free_internal

Mon Apr 29 15:33:27 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: support Environment.Exit, CommandLineArgs().

Mon Apr 29 15:15:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c, object.h: added mono_runtime_run_main () and
	mono_runtime_get_main_args () for use in System.Environment.

Mon Apr 29 13:45:11 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* gc.c: fix thinko, enable actual finalization since the jit is now
	fixed.

Mon Apr 29 12:47:36 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* gc.c, object.c: take into account that an object may be offset wrt the address
	returned by GC_malloc().

Mon Apr 29 12:14:39 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* image.c: handle files without entries in the assembly table (modules).

2002-04-28 Patrik Torstensson <patrik.torstensson@intel.com>

	* reflection.c (mono_reflection_setup_internal_class): remove g_assert_not_reached() to allow 
	mcs selfhosting	again (build breaker) and did move the check to class instead. parent is
	allowed to be null when it's System.Object class setup.

2002-04-27  Martin Baulig  <martin@gnome.org>

	* reflection.c (mono_reflection_setup_internal_class): g_assert_not_reached()
	if `tb->parent == NULL' rather than crashing.

2002-04-28  Nick Drochak  <ndrochak@gol.com>

	* sysmath.c (ves_icall_System_Math_Asin): Fix copy-paste error.  Was
	calling acos() where asin() should have been called.

2002-04-26  Martin Baulig  <martin@gnome.org>

	* assembly.c (default_assembly_name_resolver): Use G_FILE_TEST_IS_REGULAR
	instead of G_FILE_TEST_EXISTS - if you're in mcs/class/corlib/System/Test,
	there's a subdirectory called `System', but we don't want to read that
	subdirectory as an assembly.

2002-04-25  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c: Reflect latest MonoString changes.

Thu Apr 25 16:38:01 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* rand.c, rand.h: instance method icalls need to have an explicit
	this pointer as first argument in the C implementation.

2002-04-25  Nick Drochak <ndrochak@gol.com>

	* icall.c: Fix typo in map for GetNonZeroBytes

2002-04-24	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c : String does now passes unit tests without any 
	errors, the following changes has been made:
	
	Implemented replace methods.
	Renaming of methods to (try) follow the standard.
	Fixed compare ordinal
	Made all memory allocated directly to function instead of via icall function.
	Small performance fix in is_in_array function
			
 (2002-04-23) Changes from Duncan Mak <duncan@ximian.com>

	c (mono_string_Internal_ctor_charp_int_int):
	(mono_string_Internal_ctor_sbytep_int_int):  Removed check for
	sindex < 0, throw ArgumentOutOfRangeException instead of
	ArgumentNullException.

	Added new check for length == 0, however
	I need to make it return String.Empty from the C code.
	
	(mono_string_Internal_ctor_sbytep): Use mono_string_new, and let
	that calculate the length for us here.
	
	(mono_string_Internal_ctor_sbytep_int_int): Replaced
	mono_string_new_utf16 with mono_string_new, since value is utf8.

Wed Apr 24 18:43:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: register the object for finalization if needed.
	Allocate one more char in the string for the terminating 0 char.

Wed Apr 24 18:22:27 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h, image.c: check if a type implemenst a destructor.
	Use the proper key for array class lookups.
	* icall.c: register the icalls in the System.GC class.
	* gc.c, gc.h: GC-related functions and icalls.

2002-04-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* icall.c:
	* socket-io.c:
	* unicode.c: free some strings gotten from mono_string_to_utf8 and
	changed a couple of free () by g_free ().

	* decimal.c: one-liner in the comments for decimal2string ().

2002-04-24	Patrik Torstensson <patrik.torstensson@labs2.com>

	* object.c (mono_runtime_invoke_array) : Bug because of my incompetence.

2002-04-24	Patrik Torstensson <patrik.torstensson@labs2.com>

	* reflection.c (mono_reflection_get_custom_attrs) : fixed image bug (crash)
	* object.c (mono_runtime_invoke_array) : handle null in params

2002-04-23	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c: fixed bug in split (one off bug)

2002-04-23	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c: fixed bug in remove and lastindexofany, add equals icall.
	* icalls.c: added String::Equals as internal method

2002-04-23	Patrik Torstensson <patrik.torstensson@labs2.com>

	* threads.c: fixed bug in the double interlocked functions

2002-04-22	Patrik Torstensson <patrik.torstensson@labs2.com>

	* threads.c: implemented all of the new interlocked icalls.
	* string-icalls.c: fix a bug in insert.
	* icalls.c: added the icalls for interlocked, removed old string functions.
	
Mon Apr 22 19:44:16 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* loader.c: fix off-by-one error when reading argument names.

Mon Apr 22 19:28:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* profiler.c: win32 counter implementation (untested).
	* icall.cs: win32 GetNow() and GetTimeZoneData() implementations
	(the latter needs testing and more complete impl. from win32 folks).

2002-04-21  Dan Lewis  <dihlewis@yahoo.co.uk>

	* object.c: mono_array_new_full workaround mono_array_class_get
	problem.

2002-04-17	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c (mono_string_InternalRemove): Fixed overwrite bug.
	* object.h (mono_string_chars): Changed casting type.

2002-04-17	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c: Fixed trim method, added the constructors done by Duncan, fixed
			   method signatures to use gunichar2 instead of gint16.

2002-04-20  Dan Lewis  <dihlewis@yahoo.co.uk>

	* object.h, object.c: domain-specific versions of mono_object_new and
	mono_array_new.

2002-04-20  Dietmar Maurer  <dietmar@ximian.com>

	* object.c: changed String layout

	* string-icalls.c (mono_string_Internal_ctor_chara): added
	internal string constructors.

Sat Apr 20 13:33:07 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* threads.c: pass 'this' to the thread start routine.

2002-04-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* string-icalls.c: fix IndexOf and LastIndexOf. Now
	InternalCompareStr don't call twice mono_string_cmp_char for the last
	character. Improved performance in mono_string_cmp_char.

Fri Apr 19 19:26:28 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* Makefile.am, appdomain.c, class.c, object.c: split runtime-depended
	code into its own library: libmonoruntime.

2002-04-19  Dan Lewis  <dihlewis@yahoo.co.uk>

	* object.h, object.c: changed array format so that szarrays do not
	require a bounds structure.
	* icall.c, appdomain.c: support for new szarray format.

Fri Apr 19 18:04:34 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.c: compare also the retuns type when comparing signatures:
	we didn't do this as an optimization since really overloaded methods
	must differ also in the arguments, but this doesn't work with
	low-level IL code (or when using explicit conversion operators: see
	bug#23498 for an example).

Fri Apr 19 16:14:52 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* loader.c: SZARRAY types can be saved as TYPESPEC, too.

Thu Apr 18 17:15:09 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: make MonoType::GetElementType its own icall.

Thu Apr 18 16:41:30 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: remove MonoMethod_get_Name().
	* reflection.c, reflection.h, verify: cache the method name in the MonoMethod
	object.

2002-04-17	Patrik Torstensson <patrik.torstensson@labs2.com>

	* string-icalls.c: optimized a few methods.

2002-04-17	Patrik Torstensson <patrik.torstensson@labs2.com>

	* icall.c: added all new string internal calls
	* string-icalls.c: added, new string internal call implementation.
	* object.c: added mono_string_new_size for allocating a string a size

2002-04-17  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_object_isinst): use the same code as in the
	optimized x86 version.

Wed Apr 17 14:14:36 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* profiler.c: TSC-based timer code (faster and more accurate).
	Not hooked up in configure, yet (set USE_X86TSC to 1).

Wed Apr 17 12:33:10 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* profiler.c, profiler.h: track time spent compiling methods.
	* threads.c: track thread creation/destruction.

Tue Apr 16 20:08:43 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* profiler.c, profiler.h, profiler-private.h: profiling interface
	and sample implementation. Moved here so that it can be used also by
	the jit.

Tue Apr 16 12:58:12 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c, reflection.h: keep types and other handles separate in
	the hash tables for referred tokens. Add guid for modules.

Mon Apr 15 11:37:33 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c: fix bugs found with valgrind.
	* metadata.h, metadata.c: added mono_metadata_guid_heap().

2002-04-14	Patrik Torstensson <patrik.torstensson@labs2.com>

	* threads: added icall support for getting current domain for
	           the thread.
 
2002-04-13  Martin Baulig  <martin@gnome.org>

	* debug-symfile.h (MonoDebugLocalInfo): Renamed to MonoDebugVarInfo.
	(MonoDebugVarInfo): Added `index' field for register based addresses.
	(MONO_DEBUG_SYMBOL_FILE_VERSION): Increased to 9.
	(MonoDebugMethodInfo): Replaced `guint32 *param_offsets' with
	`MonoDebugVarInfo *params' and `guint32 this_offset' with
	`MonoDebugVarInfo *this_var'.

	* debug-symfile.c (relocate_variable): New static function to write
	a location description for a local variable or method parameter.

2002-04-12  Martin Baulig  <martin@gnome.org>

	* debug-symfile.h (MonoDebugLocalInfo): New type. This contains the
	stack offset and begin/end scope address of a local variable.
	(MonoDebugMethodInfo): Replaced `guint32 *local_offsets' with
	'MonoDebugLocalInfo *locals', added `prologue_end' and `epilogue_begin'.
	(MONO_DEBUG_SYMBOL_FILE_VERSION): Increased to 8.

	* debug-symfile.c (MRT_variable_start_scope, MRT_variable_end_scope):
	Added new relocation types for start/end scope of a local variable.

Fri Apr 12 18:30:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* object.h: add mono_object_domain() macro.
	* reflection.c: handle typespecs.
	* icall.c: MonoMethod::get_Name() implementation.

Thu Apr 11 12:29Ni:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: String::GetHashCode() icall implementation.

Wed Apr 10 21:16:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: String::IndexOfAny icall.
	* object.c, object.h: make array->max_length more useful.
	Intrduced mono_object_class() and mono_string_length() macros.

2002-04-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* unicode.c (ves_icall_System_Char_IsNumber): use g_unichar_isxdigit
	instead of g_unichar_isdigit.

2002-04-11  Nick Drochak  <ndrochak@gol.com>

	* icall.c: Implement a simple Double.ToString().

Tue Apr 9 21:31:16 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.h: only io-layer.h is supposed to be included.
	* icall.c: explicitly import environ. Fix warning.

2002-04-10  Nick Drochak  <ndrochak@gol.com>

	* icall.c (ves_icall_System_CurrentTimeZone_GetTimeZoneData) :
		return true even if it's not Daylight Savings time.
		Only return false for the case where the function isn't
		implemented for a plaform (read Windows).

Tue Apr 9 13:05:56 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.h, appdomain.c, class.c, object.c: protect MonoDomain
	data with a mutex.

2002-04-09  Dietmar Maurer  <dietmar@ximian.com>

	* mempool.c (mono_mempool_alloc): only use g_malloc when
	absolutely necessary.

2002-04-08  Dietmar Maurer  <dietmar@ximian.com>

	* mempool.c (MEM_ALIGN): hardcode MEM_ALIGN to 8

	* class.c (mono_class_vtable): use domain mempool to allocate vtable
	(mono_class_proxy_vtable): use domain mempool

Mon Apr 8 17:17:04 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.h, appdomain.c: split initialization that requires the
	execution engine support into mono_runtime_init().

2002-04-08  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_init): don't include vtable inside MonoClass
	to save some memory, gather some statistics.
	(mono_class_vtable): use g_malloc instead of GC_malloc when possible

Sat Apr 6 20:07:48 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: internalcall implementation for ValueType.Equals().

2002-04-06  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_message_init): moved 
	(mono_runtime_exec_main): new arch. independent impl.
	(mono_runtime_invoke_array): new method - like
	mono_runtime_invoke, but you can pass an array of objects.
	(mono_remoting_invoke): new arch. independent impl.
	(mono_message_invoke): new arch. independent impl.
	(mono_runtime_class_init): new arch. independent impl.
	(mono_runtime_object_init): new arch. independent impl.

Fri Apr 5 18:29:14 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.c, object.c, reflection.c: documented the exported
	functions.

Fri Apr 5 15:42:31 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: simpler code to pass the assembly builder data to corlib.
	Implement GetNestedTypes() internalcall.

Thu Apr 4 21:46:48 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: warn if a type can't be loaded.

2002-04-04  Dietmar Maurer  <dietmar@ximian.com>

	* image.h: typedef MonoImageOpenStatus
	* types.h: removed unused file
	
2002-04-04  Dan Lewis  <dihlewis@yahoo.co.uk>

	* icall.c: Enum_ToObject accepts enum value arguments.

Thu Apr 4 11:35:37 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: move initialization of properties, events and nested
	classes, so that they happen for interfaces, too.

Wed Apr 3 20:03:32 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: cleanup some ugly casts in Array_SetValue*.

Wed Apr 3 19:49:53 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: the values array fro enums is of the correct type, now.
	Implement (correctly) getFullName instead of assQualifiedName for
	MonoType.
	* reflection.h, reflection.c: added mono_type_get_name ().

Wed Apr 3 17:56:22 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c, image.h: for each MonoImage, record from wich assembly
	it was loaded.
	* reflection.h, icall.c: added System_Reflection_Assembly_GetTypes().
	Make Type.Assembly work.

2002-04-03  Dietmar Maurer  <dietmar@ximian.com>

	* debug-symfile.h: use char* instead of gpointer to avoid
	unnecessary casts.

	* appdomain.c (mono_jit_info_table_find): use char* instead of gpointer

	* icall.c (ves_icall_InternalExecute): impl. FielSetter
	(ves_icall_System_Array_SetValueImpl): removed strange MonoArray cast

2002-03-30  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (mono_message_init): impl. (code cleanup)
	(ves_icall_InternalExecute): impl. FieldGetter

	* class.c (mono_class_init): added exerimental EXT_VTABLE_HACK, if
	defined we call all (non-static)methods through the vtable. 

Fri Mar 29 18:09:08 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: it seems GC_debug_malloc() makes the Boehm GC call the
	finalizer even though the memory is still referenced (and the chunk of
	memory is not freed).

Fri Mar 29 17:43:04 CET 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c: fix brokeness.

Fri Mar 29 16:09:54 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: kill some warnings. Check explicit interface method
	implementation also without considering the namespace.
	Load also literal strings in static class data.

2002-03-29  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c (default_assembly_name_resolver): Kill memory leak. 
	(default_assembly_name_resolver): Make the resolver take the
	"base" directory where the assembly was originally defined, so we
	can load DLLs that are in the same directory as the assembly that
	is being referenced.

2002-03-28  Dick Porter  <dick@ximian.com>

	* file-io.h: 
	* file-io.c:
	* socket-io.c: 
	* unicode.h: 
	* unicode.c: Warning cleanups

Thu Mar 28 18:06:14 CET 2002 Paolo Molaro <lupus@ximian.com>

	* object.h, reflection.h: use the correct type instead of MonoObject.

2002-03-28  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_class_get): Don't look in referenced assemblies.
	(mono_debug_update_symbol_file): Initialize classes if necessary.

Thu Mar 28 15:58:43 CET 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c, debug-helpers.c, image.c, image.h, metadata.c, pedump.c,
	rawbuffer.c, reflection.c, verify.c: mare warning cleanups.

Thu Mar 28 15:20:39 CET 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.h: fix function prototype.
	* metadata.h, metadata.c, object.h, private.h: get rid of warnings.
	* mono-endian.h: use const cast.

2002-03-28  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_MonoMethodMessage_InitMessage): moved from message.c

Thu Mar 28 12:32:00 CET 2002 Paolo Molaro <lupus@ximian.com>

	* loader.c: don't assert when a typeref can't be loaded, give
	a chance to the runtime to trow an exception instead.
	* loader.h: fix warning.

2002-03-28  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_proxy_vtable): added proxy support

2002-03-27  Dan Lewis <dihlewis@yahoo.co.uk>

	* icall.c: removed last of PAL calls, added System.Environment
	* file-io.h, file-io.c: MonoIO implementation
	* object.h, object.c: mono_string_to_utf16() now returns gunichar2*

Tue Mar 26 19:56:10 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c: do not use the byte marker in ldstr table lookup.
	* debug-helpers.c: allow two ':' to separate class and method name.
	* object.c: allocate arrays bounds with the GC, too.
	* verify: add a few more checks.

Tue Mar 26 18:45:46 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: output also literal strings. Allocate parameter data
	with GC_malloc() (thanks, Martin, for catching this!).

2002-03-26  Martin Baulig  <martin@gnome.org>

	* debug-symfile.h (MonoDebugMethodInfo): Added `this_offset', don't
	include the `this' offset in the `param_offsets'.

2002-03-25  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_update_symbol_file): Use a new
	mono_debug_get_class() function to get the classes. Added new
	relocation types for arrays and strings.
	(mono_debug_get_class): New static function to search in all
	referenced assemblies for a metadata token.

	* debug-symfile.h (MONO_DEBUG_SYMBOL_FILE_VERSION): Increased to 7.

Mon Mar 25 13:08:18 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, reflection.c: use a gc-safe hash for hash tables that
	hold gc-allocated objects. Make the string heap a stream like the
	others. Removed duplicated code when writing stream info.
	Added asserts to catch possible buffer overflows. Set the sorted map
	for tables that need sorting. Added some documentation.

Mon Mar 25 13:04:56 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.h, appdomain.c, class.c, object.c: use a GC-safe hash table 
	for interned strings and vtables.

2002-03-24  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_Type_GetFields): Reverse the list before storing
	it in the array since it was created with g_slist_prepend().

2002-03-24  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_local_type_from_signature): Renamed
	to ves_icall_Debugger_MonoSymbolWriter_get_local_type_from_sig().
	(mono_debug_method_from_token): Renamed to
	ves_icall_Debugger_MonoSymbolWriter_method_from_token().
	(ves_icall_Debugger_DwarfFileWriter_get_type_token): New interncall.

	* debug-symfile.c (MRT_type_sizeof, MRT_type_field_offset): New
	relocation types.

	* debug-symfile.h (MONO_DEBUG_SYMBOL_FILE_VERSION): Increased to 6.

2002-03-24  Martin Baulig  <martin@gnome.org>

	* debug-symfile.c (mono_debug_local_type_from_signature): New func.
	(mono_debug_method_from_token): New func.

	* icall.c (Mono.CSharp.Debugger.MonoSymbolWriter::get_local_type_from_sig):
	New interncall, calls mono_debug_local_type_from_signature().
	(Mono.CSharp.Debugger.MonoSymbolWriter::get_method): New interncall,
	calls mono_debug_method_from_token().

2002-03-23  Martin Baulig  <martin@gnome.org>

	* unicode.c (ves_icall_iconv_get_char_count): The `count' argument
	specifies the number of bytes to be converted, not the array size.
	Return the number of chars, not the number of bytes.
	(ves_icall_iconv_get_chars): The `byteCount' argument
	specifies the number of bytes to be converted, not the array size.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* reflection.h (MonoReflectionSigHelper): New type.

	* reflection.c (mono_reflection_sighelper_get_signature_local),
	(mono_reflection_sighelper_get_signature_local): New functions.

	* icall.c (System.Reflection.Emit.SignatureHelper::get_signature_local),
	(System.Reflection.Emit.SignatureHelper::get_signature_field): New
	interncalls.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* rawbuffer.c (mono_raw_buffer_load_mmap): Use MAP_SHARED when
	is_writeable is set.
	(mono_raw_buffer_update): New function to write the modified map
	back to disk.

	* debug-symfile.h (MonoDebugSymbolFile): Added `raw_contents_size'.

	* debug-symfile.c (mono_debug_update_symbol_file): Call
	mono_raw_buffer_update() when done writing.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* debug-symfile.h (MONO_DEBUG_SYMBOL_FILE_VERSION): Increased to 5.

	* debug-symfile.c: Added support for arguments and local variables.

2002-03-23  Dick Porter  <dick@ximian.com>

	* debug-symfile.c: Remove extraneous 'include <elf.h>' that wasn't
	protected by ifdefs, hence breaking the w32 build.

Thu Mar 21 17:35:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: implement is_interned() the right way.

2002-03-21  Martin Baulig  <martin@gnome.org>

	* debug-symfile.[ch]: New files to handle debugging information
	files. There's also support to dynamically update these symbol
	files to include machine dependent information.

2002-03-20  Dietmar Maurer  <dietmar@ximian.com>

	* threads.c (mono_thread_create): new function to create thread
	from C

2002-03-20  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_InternalInvoke): Create a new object if the
	method is a constructor.
	(icall_map): Added "System.Reflection.MonoCMethod::InternalInvoke",
	points to ves_icall_InternalInvoke().

2002-03-20  Dan Lewis <dihlewis@yahoo.co.uk>

	* file-io.c: Flush shouldn't throw exceptions.

2002-03-19  Dan Lewis <dihlewis@yahoo.co.uk>

	* file-io.c: FileStream flush support; FileSetLength now
	restores file pointer.

Tue Mar 19 18:17:21 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: set image for pointer classes.

2002/03/19  Nick Drochak <ndrochak@gol.com>

	* sysmath.c: Forgot one.

2002-03-18  Miguel de Icaza  <miguel@ximian.com>

	* sysmath.c: Avoid redefining existing names.

2002-03-18  Dan Lewis <dihlewis@yahoo.co.uk>

	* sysmath.c, sysmath.h, icall.c, Makefile.am: math routines now
	handled by runtime as icall rather than dllimport from libm.so
	* file-io.c, file-io.h: fixed handle argument type.

2002-03-18  Dick Porter  <dick@ximian.com>

	* reflection.c (mono_image_get_type_info): rename interface to
	iface, because of "#define interface struct" on windows.

Sat Mar 16 19:18:38 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h: rename and export mono_ptr_class_get().
	* metadata.c: support MONO_TYPE_ARRAY in MonoType compare.
	* reflection.c, reflection.h, icall.c: better/saner type name
	parsing and MonoType creation. Handle MONO_TYPE_ARRAY in
	method signatures.

2002-03-14  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_init): removed hardcoded GHC_SLOT

	* icall.c (ves_icall_InternalInvoke): impl.

Wed Mar 13 00:27:30 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: output the interface map table, too.

2002-03-12  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (class_compute_field_layout): separate computation of 
	static field layout

2002-03-12  Dan Lewis <dihlewis@yahoo.co.uk>

	* icall.c: added System.Buffer support.
	* file-io.c: moved file icalls from PAL to FileStream.

2002-03-12  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_System_Object_GetHashCode): impl.

2002-03-11  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_System_ValueType_GetHashCode): impl.

Mon Mar 11 14:45:42 CET 2002 Paolo Molaro <lupus@ximian.com>

	* verify.c, verify.h: moved here the corlib/runtime consistency checks.

Mon Mar 11 11:12:23 CET 2002 Paolo Molaro <lupus@ximian.com>

	* debug-helpers.{c,h}: moved here from monograph some useful functions
	to locate a method by name/signature in a class or image. Included
	also a small and flexible IL disassembler.

Fri Mar 8 16:29:29 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: fixup tokens in methods with small header size, too.

2002-03-08  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_string_to_utf8): remove assert(!error), instead
	print a warning. 

Thu Mar 7 18:55:15 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: update to the new mono_Array_class_get interface.

Thu Mar 7 17:23:26 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c, object.c: Boehm-GC enable.
	* icall.c: make get_data_chunk() support split data requests.
	Ensure a class is initialized in more cases. Return only the first
	property found in GetProperties() or the compiler gets confused. 
	Implemented GetEvents(). Temporary fix to GetType(), needs rewriting.
	* reflection.h, reflection.c: add fixup mechanism for field and method
	tokens. Initialize assembly->typeref in a single place. Output
	properties after events. Support custom attributes for events, too.
	Typo fix for paramter custom attrs.

2002-03-07  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_System_Array_FastCopy): Small fix.

2002-03-07  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_array_class_get): fix. for multi. dim. arrays

2002-03-06  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_System_Array_CreateInstanceImpl): Make this work with
	non-zero lower bounds. See testcases #F10-#F13.

2002-03-05  Martin Baulig  <martin@gnome.org>

	* exception.c (mono_get_exception_argument_out_of_range): New exception.

	* icall.c (ves_icall_System_Array_GetValue): Moved actual implementation to
	ves_icall_System_Array_GetValue(), only calculate the absolute array position
	here.
	(ves_icall_System_Array_SetValue): Likewise.
	(ves_icall_System_Array_GetValueImpl): New interncall. Takes an array position
	as argument and does the actual work. This function is used when copying a
	multi-dimensional array.
	(ves_icall_System_Array_SetValueImpl): Almost completely rewrote this. It can
	now do all the widening conversions of value types.
	(ves_icall_System_Array_CreateInstanceImpl): Implemented.

Tue Mar 5 18:14:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: remove some magic numbers and use the smbolic names,
	instead. Added init_events() to load event info at class init time.
	* metadata.h, metadata.c: added mono_metadata_events_from_typedef()
	and mono_metadata_methods_from_event().
	* reflection.h, reflection.c: added support for writing out the evnets
	related information.

Mon Mar 4 20:32:43 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h, icall.c: use a different method (GetInterfaces)
	to gather interface info and add isbyref, isprimitive and
	ispointer to the ves_icall_get_type_info() return value.

Mon Mar 4 11:22:26 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.h: stared adding support for events.
	* icall.c: split find_members implementation. Added debug icall to get
	the address of an object.
	* reflection.c: handle TypeBuilders in mono_type_get_object().

2002-03-01  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_System_Array_GetLength): This must throw an
	ArgumentOutOfRangeException(), not an ArgumentException().
	(ves_icall_System_Array_GetLowerBound): Likewise.
	(ves_icall_System_Array_GetValue): Improved argument checking.
	(ves_icall_System_Array_SetValue): Improved argument checking.

2002-03-01  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_System_Array_GetValue): Raise an exception when
	called with invalid arguments rather than just dying with g_assert().
	(ves_icall_System_Array_SetValue): Likewise.
	(ves_icall_System_Array_CreateInstanceImpl): Don't g_assert_not_reached(),
	raise a NotImplementedException instead.
	(ves_icall_System_Array_GetLength): Added argument checking.
	(ves_icall_System_Array_GetLowerBound): Added argument checking.

2002-03-01  Dietmar Maurer  <dietmar@ximian.com>

	* object.h (mono_assert): new macros mono_assert and
	mono_assert_not_reached

2002-02-28  Martin Baulig  <martin@gnome.org>

	* icall.c: Rename "System::String::Intern" to "System::String::_Intern"
	and "System::String::IsInterned" to "System::String::_IsInterned".

Thu Feb 28 19:19:35 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: remove hacks for typebuilder. Added icall to create a
	modified type from a tybebuilder.
	* reflection.c: removed hacks for TypeBuilder. Create also a MonoImage
	in mono_image_basic_init (). Added mono_reflection_setup_internal_class ()
	to create a backing MonoClass for a TypeBuilder.

Thu Feb 28 15:35:51 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h: more refactoring of class init.
	Export mono_class_setup_mono_type() and mono_class_setup_parent().

Thu Feb 28 12:33:41 CET 2002 Paolo Molaro <lupus@ximian.com>

	* marshal.c, marshal.h: start of marshaling interface.

Wed Feb 27 22:15:17 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: fix order in assembly qualified name icall.

Wed Feb 27 18:45:03 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: do not free str, since we store it in the hash table.
	* reflection.h: add label field to MonoILExceptionInfo.
	* reflection.c: handle references to more than one assembly. Handle
	case when there isn't a module created in the assembly.

Wed Feb 27 12:35:10 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: Fix typo. Start refactoring of class init code.

Wed Feb 27 12:23:00 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c: exit with 1 on error.
	* class.c: we already have the name in MonoClassField.
	* image.c, image.h, metadata.c, pedump.c: use directly a pointer in
	MonoStreamHeader instead of an offset of image->raw_metadata.

2002-02-26  Miguel de Icaza  <miguel@ximian.com>

	* appdomain.c (mono_init): Be even more descriptive about the error.

Tue Feb 26 16:18:07 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c: give the user an informative message when corlib can't
	be loaded.

2002-02-26  Martin Baulig  <martin@gnome.org>

	* icall.c (ves_icall_System_CurrentTimeZone_GetTimeZoneData):
	New icall to get the time zone data.

Mon Feb 25 15:51:51 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: set virtual and raw size of section correctly.
	* threads.c: transfer domain information to newly created threads.

Fri Feb 22 18:55:57 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: when instancing a class in a domain, load the default
	vaules for static fields from the constant table. Fix System.Enum to
	not be an enum.
	* icall.c: implement Object::GetType() internalcall. Implemented
	MonoField::GetValue() internalcall. Avoid SEGV in search_method().
	Fixed checking of binding flags in find_members().
	* metadata.c, metadata.h: introduce mono_metadata_type_hash().
	* reflection.c: handle enumerations when writing to the constant
	table. Use a different object cache for types.


2002-02-22  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_object_isinst): fix for arrays

	* icall.c (ves_icall_type_is_subtype_of): fix for 2 interfaces

Thu Feb 21 21:00:13 CET 2002 Paolo Molaro <lupus@ximian.com>

	* object.c: don't use mprotect ()  and fix intern pool hash table
	lookup for big endian systems.

Thu Feb 21 19:30:29 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: change type_is_subtype_of () signature.

2002-02-21  Mark Crichton  <crichton@gimp.org>

        * rand.c, rand.h: Added random number generator for
        System.Security.Cryptography classes.

        * exception.c, exception.h: Added mono_get_exception_not_implemeted.

        * icall.c: Added System.Security.Cryptography calls.

Thu Feb 21 16:45:34 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c, icall.c, metadata.c: better support for pointer types.
	Create a class for them as suggested by dietmar. Fix TYPE_ARRAY class.
	* reflection.c: Add support for getting custom attrs for properties
	and simplify some code.

Wed Feb 20 22:20:29 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: change getToken () and add custom attribute GetBlob()helper
	method.
	* reflection.h: add custom attrs array to the reflection builder structures.
	* reflection.c: encode and emit custom attributes for all the relevant
	reflection objects. Cache fieldref and methodref tokens. Change
	mono_image_create_token() interface to take a MonoDynamicAssembly.
	More complete custom attributes decoder. Load custom attributes for
	Assembly, Field, Method and Constructor objects, too. Make the
	returned array an Attribute[] one, not object[]. Added
	mono_reflection_get_custom_attrs_blob() to encode the arguments of a
	custom attribute constructor.

2002-02-20  Dick Porter  <dick@ximian.com>

	* icall.c:
	* rawbuffer.c:
	* socket-io.c: Windows portability fixes (sometimes just ifdeffing
	problem code out for now).

2002-02-19  Radek Doulik  <rodo@ximian.com>

	* object.c (mono_ldstr): use hash table to avoid multiple swapping

Tue Feb 19 20:23:11 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: register the GetCustomAttributes method.
	* object.c, object.h: add mono_string_new_len ().
	* reflection.h, reflection.c: added mono_runtime_invoke(),
	mono_install_runtime_invoke(). Added
	mono_reflection_get_custom_attrs () to load custom attributes and
	create the attribute objects.

2002-02-19  Dick Porter  <dick@ximian.com>
	* threads-dummy-types.c:
	* threads-dummy-types.h:
	* threads-dummy.c:
	* threads-dummy.h:
	* threads-pthread-types.c:
	* threads-pthread-types.h:
	* threads-pthread.c:
	* threads-pthread.h:  Deleted obsolete files

2002-02-19  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_vtable): runtime init the class when we
	allocate static class data.

	* icall.c (ves_icall_System_Array_SetValue): check for null values.

	* appdomain.c (mono_domain_transfer_object): impl. hack for Arrays
	and String - but we will need generic marshalling support in the
	future. 
	(mono_init): set the domain name in a ms compatible way

	* object.c (mono_string_new_utf16): bug fix: use char[] instead of
	String[].

2002-02-18  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_array_clone): use alloca() instead of g_malloc  
	for sizes

	* appdomain.c (mono_domain_unload): impl.

Mon Feb 18 15:52:20 CET 2002 Paolo Molaro <lupus@ximian.com>

	* appdomain.c, object.c: fix intern pool implementation.
	* class.c: fix alignment code.

2002-02-16  Radek Doulik  <rodo@ximian.com>

	* icall.c (ves_icall_System_Enum_ToObject): in case of big endian
	and s2 > s1, just copy lower bytes to be compatible with little
	endian (i.e. 64bit value & 0xffffffff --> 32bit value)
	(ves_icall_System_Enum_ToObject): and likewise for s1 > s2

	* unicode.c (ves_icall_iconv_new_encoder): decide on big_endian,
	force big_endian to be 1 for big endian machines 
	(ves_icall_iconv_new_decoder): ditto

2002-02-16  Jeffrey Stedfast  <fejj@ximian.com>

	* socket-io.c (convert_sockopt_level_and_name): If the system
	doesn't define SOL_IP or SOL_TCP, get them by hand using
	getprotobyname() and caching the values (because this could be a
	slow operation).
	(ves_icall_System_Net_Sockets_Socket_SetSocketOption_internal):
	Use the appropriate struct when the system does support it. Ie,
	not all systems have struct ip_mreqn so use struct ip_mreq when
	appropriate.

Fri Feb 15 18:15:44 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: handle finally clauses.

Fri Feb 15 15:06:33 CET 2002 Paolo Molaro <lupus@ximian.com>

	* socket-io.c: use g_snprintf() instead of snprintf.

2002-02-14  Jeffrey Stedfast  <fejj@ximian.com>

	* reflection.c (mono_param_get_objects): Cast second argument to
	mono_method_get_param_names to a const char** to silence the
	compiler warning.

	* appdomain.c (mono_domain_assembly_open): Put parens around the
	truth statement in the for-loop.

	* unicode.c (iconv_convert): Got rid of a compiler warning about
	int i being unused when the system has a new iconv.
	(iconv_get_length): Same.

	* image.c (load_class_names): Cast the second argument to
	g_hash_table_insert() to char* to hush compiler warnings about the
	arg being a const.
	(mono_image_open): Same here.

	* socket-io.c: Don't conditionally include sys/filio.h or
	sys/sockio.h here anymore since we now get them from
	io-layer/io-layer.h
	(inet_pton): If the system doesn't support inet_aton, implement
	using inet_addr and also #define INADDR_NONE if it isn't defined
	by the system.

Thu Feb 14 19:01:06 CET 2002 Paolo Molaro <lupus@ximian.com>

	* metadata.c, metadata.h: added function to get packing and size info
	of a typedef.
	* reflection.h, reflection.c: handle field RVA data. Save info about
	the table layout if needed. Assign typedef indexes to all the types
	before dumping the info about them to avoid forward reference problems.

2002-02-14  Dietmar Maurer  <dietmar@ximian.com>

	* socket-io.c (convert_sockopt_level_and_name): ifdef
	SO_ACCEPTCONN because it is not defined on my system (old debian)

Thu Feb 14 11:49:30 CET 2002 Paolo Molaro <lupus@ximian.com>

	* opcode.c: use stddef.h to get NULL.

2002-02-14  Jeffrey Stedfast  <fejj@ximian.com>

	* socket-io.c: conditionally include sys/filio.h and sys/sockio.h
	for FIONBIO, FIONREAD and SIOCATMARK.
	(ves_icall_System_Net_Dns_GetHostByAddr_internal): SunOS doesn't
	define INADDR_NONE and besides, inet_addr() is deprecated and
	should not be used. Use inet_pton() instead - it also has the
	added bonus that it can easily handle IPv6 addresses as well.
	(inet_pton): Implement using inet_aton() ifndef HAVE_INET_PTON.

Wed Feb 13 23:00:21 CET 2002 Paolo Molaro <lupus@ximian.com>

	* decimal.c: remove _MSC_VER conditional.

2002-02-13  Dick Porter  <dick@ximian.com>

	* socket-io.c: 
	* icall.c: Internal calls for Blocking, Select, Shutdown,
	GetSocketOption and SetSocketOption

Wed Feb 13 19:20:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.cs: better resolver: use it instead of some kludgy
	code.

Wed Feb 13 18:25:55 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: the best way to speed-up the compiler is to avoid
	infinite loops.

2002-02-13  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_vtable): changed the object layout
	(obj->vtable->class). 
	(mono_class_create_from_typespec): consider MONO_TYPE_PTR

Tue Feb 12 20:06:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* assembly.c: look for assemblies in the assembly dir, too.

Tue Feb 12 14:03:42 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: fix thinko in mono_class_from_type().

Mon Feb 11 19:43:51 CET 2002 Paolo Molaro <lupus@ximian.com>

	* exception.h, exception.c: added TypeLoadException.
	* object.h, object.c: added mono_array_clone ().
	* icall.c: handle throwOnError in AssemblyGetType().
	Added Array.Clone().
	* opcode.h, opcode.c: use a single value for the opcode val.
	Compile fix for non-gcc compilers.

Fri Feb 8 12:26:37 CET 2002 Paolo Molaro <lupus@ximian.com>

	* opcodes.c, opcodes.h: export interesting info about opcodes.

2002-02-05  Dietmar Maurer  <dietmar@ximian.com>

	* object.h (MONO_CHECK_ARG, MONO_CHECK_ARG_NULL): new macro for
	icalls. 

	* class.c (class_compute_field_layout): set element_class for enums
	(mono_class_create_from_typedef): set element_class for normal classes

	* icall.c (ves_icall_System_Enum_get_value): impl.

	* class.c (mono_class_create_from_typedef): do not set valuetype
	flag for System.ValueType and System.Enum

2002-02-04  Dietmar Maurer  <dietmar@ximian.com>

	* unicode.c (iconv_convert): fix big endian problem.

Fri Feb 1 16:13:20 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: add asserts if we are ever going to scribble over memory.
	* socket-io.c: not all systems have AF_IRDA defined.

2002-01-31  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (class_compute_field_layout): do not consider static
	fields to compute alignment

2002-01-25  Dietmar Maurer  <dietmar@ximian.com>

	* appdomain.c (mono_appdomain_get): impl.
	(ves_icall_System_AppDomain_ExecuteAssembly): impl.

Thu Jan 24 12:59:23 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: ignore "file://" prefix when loading an assembly.

2002-01-23  Dick Porter  <dick@ximian.com>

	* socket-io.c:
	* icall.c:
	* Makefile.am: Added socket support

2002-01-23  Miguel de Icaza  <miguel@ximian.com>

	* icall.c (ves_icall_appdomain_get_default_assemblies): put this
	code back.  This should return the assemblies that are loaded by
	the runtime on behalf of an application domain. 

	The current implementation is still broken, it just returns every
	assembly loaded, but until we get real applications domain this
	will do.

2002-01-23  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_appdomain_get_cur_domain): runtime_init the
	AppDomain object.

2002-01-23  Miguel de Icaza  <miguel@ximian.com>

	* icall.c (ves_icall_appdomain_get_cur_domain): Cache the value of
	the mono_class_from_name lookup.
	(ves_icall_get_parameter_info): ditto.
	(ves_icall_appdomain_get_assemblies, add_assembly): Implement new internal
	method.
	(ves_icall_System_Reflection_Assembly_get_code_base): Another new call.

Tue Jan 22 22:43:47 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: load also nested classes on class init.
	System.ValueType instance methods gets passed boxed
	values, unless methods in derived classed that get a pointer to the
	data.
	* icall.c: use better name parsing code in GetType().
	* image.c, image.h: add mono_image_loaded ().
	* metadata.c, metadata.h: add mono_metadata_nesting_typedef ().
	* reflection.c, reflection.h: added mono_reflection_parse_type().

2002-01-22  Veronica De Santis <veron78@interfree.it>

	* icall.c : Added mapping of internal calls for Manual and Auto reset events
	* threads.c : Added the implementation of internal calls for events
	* threads.h : Added prototypes of internal calls for events
	
2002-01-21  Radek Doulik  <rodo@ximian.com>

	* icall.c (ves_icall_InitializeArray): swap bytes on big endians

2002-01-21  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_init): set min_align to 1 (instead of 0)
	(mono_class_value_size): use min_align

2002-01-20  Dick Porter  <dick@ximian.com>

	* threads.h:
	* threads.c: Replaced all instances of WapiHandle * with HANDLE,
	so it compiles on w32.

2002-01-17  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_type_stack_size): impl.

	* class.c (mono_class_get_field): impl. memberref token

2002-01-16 Veronica De Santis <veron78@@interfree.it>

        * icall.h : Added the internal calls mapping for CreateMutex_internal
	  	    and ReleaseMutex_internal.
	* threads.h : Added the prototype of mutexes internal calls.
	* threads.c : Added the implementations of mutexes internal calls.

Tue Jan 15 22:47:57 CET 2002 Paolo Molaro <lupus@ximian.com>

	* metaparse.h: removed unused file.
	* reflection.c, reflection.h: added stream_data_align () function 
	to align data in streams and keep stream aligned. Add support for
	exception support in method headers.

Tue Jan 15 19:42:50 CET 2002 Paolo Molaro <lupus@ximian.com>

	* unicode.c: make iconv_convert () return the number of bytess written
	in the output buffer.

2002-01-15  Dick Porter  <dick@ximian.com>
	* threads.c: Make the runtime's idea of infinite timeouts coincide
	with the class library's

	Fix a particularly egregious bug in mono_thread_cleanup(). That
	code was so utterly bogus it must have been written on a Monday.

Mon Jan 14 17:01:03 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.h: add subtypes field to TypeBuilder.
	* reflection.c: encode constants for literal fields.
	Handle subtypes. Fix user string token (and add a zero byte)
	at the end.
	
2002-01-14  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_init): bug fix: assign slot numbers for
	abstract methods.

Fri Jan 11 18:54:42 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: don't try to output a code RVA for abstract methods.
	Small fixes for method header format. Output parameter info to the
	ParamDef table. Save method overriding info to MethodImpl table.
	Fix property support. Allow typedef.extends to be a type in the
	building assembly.
	* verify.c: fix off-by-one error.

Thu Jan 10 19:36:27 CET 2002 Paolo Molaro <lupus@ximian.com>

	* class.c: fix mono_class_from_mono_type () for szarray types.
	Remove unused cache check in mono_class_from_type_spec().
	* icall.c: *type_from_name () functions handle simple arrays and byref.
	* reflection.c: handle byref and szarray types. Handle methods without
	body (gets P/Invoke compilation working). Handle types and fields in
	get_token ().
	* reflection.h: add rank to MonoTypeInfo.

2002-01-10  Dick Porter  <dick@ximian.com>

	* threads.c: Implemented WaitAll(), WaitAny() and WaitOne()
	internal calls

Wed Jan 9 19:27:13 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: initialize class in type_from_handle ().
	Loop also in parent classes for get_method ().
	* reflection.c: properly encode class and valuetype types.
	Start on encoding TypeBuilder types. Handle fieldrefs.
	Use correct length when registering a user string.
	Handle ConstructorBuilder and MonoMethod in get_token ().
	Make mono_type_get_object () aware of cached types.
	* object.c: back out change to mono_string_new ().

Tue Jan 8 22:47:44 EST 2002 Matt Kimball <matt@kimball.net>
	* object.c: mono_string_new should return a NULL when the string 
	passed in is NULL -- not try to deference it.
	
Sat Jan 5 15:48:04 CET 2002 Paolo Molaro <lupus@ximian.com>

	* icall.c: hack to make IsSubType work for TypeBuilders.
	* reflection.c: emit constructors before methods.
	Retrieve param names in mono_param_get_objects().

2002/01/05  Nick Drochak  <ndrochak@gol.com>

	* Makefile.am: fix list of headers and sources so automake 1.5
	doesn't complain. Removed \# at end of list.

Thu Jan 3 23:17:17 CET 2002 Paolo Molaro <lupus@ximian.com>

	* reflection.c: get token for a method ref. Set return type of
	constructor to void.
	* loader.c: debug message.
	* class.c: typo fix.

Mon Dec 24 17:18:10 CET 2001 Paolo Molaro <lupus@ximian.com>

	* icall.c: fix array init with rank > 1. FindMembers
	loops in parent class as well.
	* image.c: do not insert nested types in name cache.
	* reflection.c: warning fix.
	* reflection.h: add override method (for interface impl).

Mon Dec 24 16:16:56 CET 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c: fix customattr decoding.

2001-12-21  Miguel de Icaza  <miguel@ximian.com>

	* rawbuffer.cs: Added native Win32 implementation, avoids using
	mmap on Cygwin.  This patch is from Dan Lewis (dihlewis@yahoo.co.uk)

Thu Dec 20 20:11:26 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: make the low-level routines handle the cache.

Thu Dec 20 15:20:35 CET 2001 Paolo Molaro <lupus@ximian.com>

	* image.c: fopen (file, "rb") ("David Dawkins" <david@dawkins.st>).

Tue Dec 18 18:50:00 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: fix mono_array_element_size() for objects.
	* class.h, class.c: add properties to MonoClass and load them
	at init time.
	* icall.c: check with isinst() when assigning a value to an array
	instead of requiring the classes to match exactly.
	Implemented icall for System.Type::GetType().
	Implemented icalls to get ParameterInfo, ProprtyInfo and info about
	enums. Handle bindingflags when looking for methods and fields.
	* metadata.h, metadata.c: implemented mono_metadata_properties_from_typedef()
	and mono_metadata_methods_from_property().
	* reflection.h, reflection.c: added structures for propreties,
	parameters and enums. Implemented mono_property_get_object() and
	mono_param_get_objects().

2001-12-18  Dick Porter  <dick@ximian.com>

	* file-io.c: Use mono_string_to_utf16() instead of
	mono_string_chars()

	* object.c: Added mono_string_to_utf16(), which copies the non
	NULL-terminated MonoString into a new double-null-terminated
	buffer.

2001-12-17  Dietmar Maurer  <dietmar@ximian.com>

	* icall.c (ves_icall_System_DateTime_GetNow): added EPOCH adjustment

2001-12-16  Dietmar Maurer  <dietmar@ximian.com>

	* file-io.c: raise exceptions if handle is invalid.

Thu Dec 13 20:27:08 CET 2001 Paolo Molaro <lupus@ximian.com>

	* assembly.c: yet another check for mscorlib.
	* class.c, class.h: load nesting info for classes.
	* icall.c: many new functions to support the Reflection classes.
	* metadata.c, metadata.h: mono_metadata_nested_in_typedef() added.
	* reflection.h, reflection.c: mono_image_create_token(),
	mono_assembly_get_object(), mono_type_get_object(),
	mono_method_get_object(), mono_field_get_object(): methods to return
	objects that parallel the C representation of assemblies, types,
	methods, fields.

2001-12-11  Dick Porter  <dick@ximian.com>

	* icall.c:
	* file-io.c: Internal calls for file IO.

Thu Dec 6 16:21:30 CET 2001 Paolo Molaro <lupus@ximian.com>

	* tabledefs.h: missing FileAttributes.
	* verify.h, verify.c: use is_valid_string () to simplify and check for
	valid strings more correctly. Fix warnings and speeling.
	Check more tables: Filed, File, ModuleRef, StandAloneSig.
	Check code: branches, maxstack, method calls.

2001-12-04  Dietmar Maurer  <dietmar@ximian.com>

	* object.c (mono_object_allocate): removed static, so that the jit
	can allocate value types.

	* icall.c (ves_icall_System_DateTime_GetNow): impl.

Mon Dec 3 17:02:01 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: init enum types right away and register the
	token->MonoClass map in mono_class_create_from_typedef ().
	* verify.h, verify.c: first cut of the verifier.
	* pedump.c: add --verify switch to verify metadata tables.
	* tabledefs.h: add some missing enums.

2001-11-30  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_install_runtime_class_init): impl.
	(mono_class_init): renamed mono_class_metadata_init to
	mono_class_init, also removed the metadata_inited flag

	* object.c (mono_object_isinst): use faster algorithm

2001-11-30  Radek Doulik  <rodo@ximian.com>

	* mono-endian.h: reverted last change
	added function prototypes

	* Makefile.am (libmetadata_a_SOURCES): reverted my last change and
	add mono-endian.c back

	* mono-endian.c: returned back, as Paolo pointed out, it's needed
	for unaligned access, I've mistaked it with endianess. I am
	sorry.
	(mono_read16): fix reverted endianess
	(mono_read64): ditto
	(mono_read32): ditto

2001-11-30  Dick Porter  <dick@ximian.com>

	* exception.c: Implement mono_exception_from_name()

Fri Nov 30 12:01:02 CET 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c: remove params_size and locals_size and their
	calculation from the metadata code: they are only usefult to the
	interp.

2001-11-29  Radek Doulik  <rodo@ximian.com>

	* object.c (mono_ldstr): swap bytes here, it's probably not the
	best place, but works for me now, I'll redo it once I know mono
	better, also note that I add PROT_WRITE and don't reset back, also
	note that it's only affects big endians, so x86 should be OK

	* mono-endian.h (read16): use just glib macros for both endians

	* mono-endian.c: removed as glib macros are used in in
	mono-endian.h so we don't need to care about endianess for read
	macros as glib does that for us already

Thu Nov 29 18:20:58 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.h: take minimum alignment into consideration so
	that the fields of a class remain aligned also when in an array.

Tue Nov 27 16:39:01 CET 2001 Paolo Molaro <lupus@ximian.com>

	* loader.h, loader.c: add mono_method_get_param_names().
	* class.c: 0-init class fields.

2001-11-26  Dick Porter  <dick@ximian.com>

	* icall.c:
	* threads-types.h:
	* threads.c: New file that handles System.Threading on all platforms

	* object.c: 
	* object.h: Remove the synchronisation struct from MonoObject,
	replace it with a pointer that gets initialised on demand

	* Makefile.am: Replace all the system-specific threading code with
	a single file that uses the new wrapper library

Mon Nov 19 11:37:14 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h: add mono_install_trampoline() so that the runtime
	can register a function to create a trampoline: removes the ugly
	requirement that a runtime needed to export arch_create_jit_trampoline.
	* object.h, object.c: added mono_install_handler() so that the runtime
	can install an handler for exceptions generated in C code (with
	mono_raise_exception()). Added C struct for System.Delegate.
	* pedump.c: removed arch_create_jit_trampoline.
	* reflection.c: some cleanups to allow registering user strings and
	later getting a token for methodrefs and fieldrefs before the assembly
	is built.
	* row-indexes.h: updates and fixes from the new ECMA specs.

Thu Nov 15 17:44:49 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c: add enum_basetype field to MonoClass.
	* metadata.h, metadata.c: add mono_metadata_get_constant_index()
	to get index in the constant table reated to a field, param or
	property.
	* reflection.h, reflection.c: handle constructors. Set public-key and
	version number of the built assembly to 0.
	* row-indexes.h: update from new ECMA spec.

Wed Nov 14 19:26:06 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c: add a max_interface_id to MonoClass.
	* icall.c: rename my_mono_new_object() to my_mono_new_mono_type()
	since it's used to do that. Added mono_type_type_from_obj().
	Make GetType() return NULL instead of segfaulting if the type was not
	found. Handle simple arrays in assQualifiedName.
	* object.h: add a struct to represent an Exception.
	* reflection.c: output call convention in method signature.
	Add code to support P/Invoke methods and fixed offsets for fields.

Mon Nov 12 12:41:32 CET 2001 Paolo Molaro <lupus@ximian.com>

	* decimal.c, decimal.h: mono_double2decimal() get the sign bit from
	the value.
	* icall.c: use mono_array_addr instead of array->vector: fixes the
	reflection image writing.
	* reflection.c: init call convention byte to 0 in method signature.
	Encode the property signature. Don't output property-related methods
	twice. Really process the properties for a type (don't cast a field to
	a property, my mom always told me that).
	Fix 64 bit issues in pointer alignment in a different and more
	readable way.

2001-11-10  Sean MacIsaac  <macisaac@ximian.com>

	* loader.h: Removed type class from MonoDefaults, added monotype

	* loader.c: Loaded MonoType, removed loading of Type

	* icall.c (my_mono_new_object): Now returns a System.MonoType,
	and fills in System.Type._impl with a RuntimeTypeHandle rather
	than the actual MonoClass *

	(ves_icall_type_from_handle): change from type_class to
	monotype_class

	(ves_icall_System_Runtime_InteropServices_Marshal_ReadIntPtr):
	implemented

	(ves_icall_System_Runtime_InteropServices_Marshal_PtrToStringAuto):
	implemented

	(ves_icall_System_Reflection_Assembly_LoadFrom): implemented

	(ves_icall_System_Reflection_Assembly_GetType): implemented

	(ves_icall_System_MonoType_assQualifiedName): implemented

	(ves_icall_System_PAL_OpSys_GetCurrentDirecotry): implemented

2001-11-09  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c (mono_assembly_open): Implement a cache for the
	assemblies. 

	(mono_assembly_close): only destroy the assembly when the last
	reference is gone.
	
2001-11-09  Dick Porter  <dick@ximian.com>

	* Makefile.am (pedump_LDADD): Don't need THREAD_LIBS any more

2001-11-09  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): bug fix: compute the right slot

Fri Nov 9 15:48:02 CET 2001 Paolo Molaro <lupus@ximian.com>

	* icall.c, decimal.h, decimal.c: integrated decimal internalcalls
	from Martin Weindel.
	* object.h: add mono_string_chars ().

2001-11-07  Miguel de Icaza  <miguel@ximian.com>

	* reflection.c (build_compressed_metadata): Eliminates warnings
	and uses 64-bit clean code.

	* metadata.c (mono_type_hash): Change signature to eliminate warnings.
	(mono_type_equal): Change signature to eliminate warnings.

Wed Nov 7 15:40:01 CET 2001 Paolo Molaro <lupus@ximian.com>

	* icall.c, loader.c: remove the internalcall array constructors.
	Changes to match the new MonoArray structure.
	* object.h, object.c: an array object doesn't allocate an extra
	vector. Add mono_array_new_full () to create jagged arrays easily.

Mon Nov 5 19:51:06 CET 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c: add mono_metadata_field_info () to
	retreive all the info about a field from vairous tables.
	* icall.c: implement S.Runtime.CServices::InitializeArray () icall.
	* class.h, class.c: augment MonoClassField with more info.
	Implemented mono_ldtoken for fields. Implemented ExplicitLayout
	policy and load a field's RVA if needed.

2001-11-05  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): create a trampoline for all
	virtual functions instead of actually compiling them.

Fri Nov 2 19:37:51 CET 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c: include name in MonoClassField.
	* class.c: fix fundamental type of System.Object and System.String.
	Set the right fundamental type for SZARRAY, too. Handle TypeSpec
	tokens in ldtoken.
	* icall.c: remove internalcalls for the Reflection stuff that is now
	done in C# code.
	* loader.c: mono_field_from_memberref () implementation.
	* mono-endian.c: thinko (s/struct/union/g).
	* object.c, object.h: make the mono_string_* prototypes actually use
	MonoString instead of MonoObject.
	* reflection.c, reflection.h: updates for changes in the reflection
	code in corlib: we use C structures that map to the actual C# classes.
	Handle SZARRAYs when encoding types. Handle locals in methods. Use a
	fat method header if needed and use the info from the ILGenerator for
	methods. Handle fields in types. Misc fixes.

2001-10-17  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): bug fix: always allocate
	space for static class data

2001-10-25  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_compute_relative_numbering): use relative
	numbering to support fast runtime type checks.

2001-10-17  Sean MacIsaac  <macisaac@ximian.com>

	* class.c (mono_class_create_from_typeref): added debugging output
	to print class name when MonoDummy is returned instead of real class

2001-10-15  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): interface offset table now
	contains pointers into the vtable - this is more efficient for the jit

2001-10-12  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): use a temporary vtable (the
	old algorithm only worked for the interpreter, but not for the jit)

2001-10-11  Dietmar Maurer  <dietmar@ximian.com>

	* loader.c (method_from_memberref): use mono_class_get to get the
	class of an array instead of using System.Array directly.
	(mono_get_method): also add MEMBERREF methods to the method cache
	which usefull for arrays.

2001-10-10  Dietmar Maurer  <dietmar@ximian.com>

	* pedump.c (arch_compile_method): added to compute vtable entry

	* metadata.c (mono_metadata_interfaces_from_typedef): also return the
	number of interfaces.
	
	* class.h: merged MonoArrayClass into MonoClass

	* class.c (mono_class_create_from_typedef): compute the vtable size and
	allocate space to include the vtable inside MonoClass
	(mono_class_metadata_init): initialize the vtable

Mon Oct 8 16:12:38 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c, metadata.h: use MonoArrayType to describe the shape of an array.
	Guard against calling bsearch with a NULL pointer (pointed out by Laurent Rioux, smoux).
	* image.c: endian fixes by Laurent Rioux.
	* object.h, object.c: rename MonoStringObject to MonoString and
	MonoArrayObject to MonoArray. Change some function names to conform to
	the style mono_<object>_<action>. mono_string_new_utf16 () takes a
	guint16* as first argument, so don't use char*.
	Provide macros to do the interesting things on arrays in a portable way.
	* threads-pthread.c: updates for the API changes and #include <sched.h>
	(required for sched_yield()).
	* icall.c: updates for the API changes above.
	* Makefile.am, mono-endian.c. mono-endian.h: include unaligned read routines for
	platforms that need them.

Mon Oct 8 10:43:23 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: set the correct type for all the fundamental
	type when loading the class.

2001-10-05  Dick Porter  <dick@ximian.com>

	* threads-pthread.c (pthread_mutex_timedlock): Simple
	compatibility version for C libraries that lack this call.

Thu Oct 4 19:10:30 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: MonoTypes stored in MonoClass are stored as
	fundamental MonoTypes when the class represents a
	fundamental type (System.Int32, ...).
	The TypeHandle return by ldtoken is a MonoType*.
	* icall.c: ves_icall_get_data_chunk () write out all the
	PE/COFF stuff. Implement ves_icall_define_method (),
	ves_icall_set_method_body (), ves_icall_type_from_handle ().
	* image.c: properly skip unknown streams.
	* loader.h, loader.c: add type_class to mono_defaults.
	* metadata.c, metadata.h: export compute_size () as
	mono_metadata_compute_size () with a better interface.
	Typo and C&P fixes.
	* pedump.c: don't try to print the entry point RVA if there is no entry point.
	* reflection.c, reflection.h: many cleanups, fixes, output method
	signatures and headers, typedef and typeref info, compress the metadata
	tables, output all the heap streams, cli header etc.
	* row-indexes.h: typo fixes.

2001-10-04  Dick Porter  <dick@ximian.com>

	* object.h: Add a synchronisation mutex struct to MonoObject

	* object.c (mono_new_object): Initialise the object
	synchronisation mutexes

	* icall.c: System.Threading.Monitor internal calls
	
	* threads-pthread.h:
	* threads-pthread.c: System.Threading.Monitor internal calls

	* threads-types.h: New file, includes the system-specific thread
	structures
	
	* threads-pthread-types.h:
	* threads-pthread-types.c: New files, handle pthread-specific
	synchronisation types

	* threads-dummy-types.h: 
	* threads-dummy-types.c: New files of dummy support for
	thread-specific types

	* metadata.c:
	* image.c:
	* pedump.c: include mono-endian.h not endian.h
	
	* Makefile.am: More threads files.
	Name mono-endian.h not endian.h

Tue Oct 2 20:33:48 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* Makefile.am, reflection.h, reflection.c: move here the reflection related 
	stuff and implement a few more bits.
	* icall.c: a field needs to be dereferenced twice. Do not use the same
	name for two variables in the same scope.
	* image.c, image.h: cleanups.

2001-10-02  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): bug fix: compute the right size

Mon Oct 1 20:43:57 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* icall.c: implemented some of the Reflection internalcalls.
	* image.c, image.h: start writing out the PE/COFF image.
	* metadata.h, metadata.c: implement mono_metadata_encode_value ()
	that does the reverse than decode_blob_size ().
	* object.c: use mono_metadata_encode_value (). Move here
	temporary implementation of mono_string_to_utf8 ().
	* rawbuffer.c: make malloc_map static.

Fri Sep 28 19:26:30 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c: fix type comparison for arrays.
	* loader.h, loader.c: half-assed fix to get more tests work in cygwin.
	Added a couple of new classes to monodefaults.
	* icall.c: added a couple of Reflection-related internalcalls.
	* class.h, class.c: implemented mono_ldtoken () for RuntimeTypeHandles.
	Added a byval_arg MonoType to MonoClass.

2001-09-28  Dick Porter  <dick@ximian.com>

	* icall.c:
	* threads-pthread.h: 
	* threads-pthread.c: Implemented internal calls for
	LocalDataStoreSlot operations.  Applied mutexes around all shared
	data.  Reworked the thread creation and Start() operations to
	avoid a race condition.
	
	* threads-dummy.h:
	* threads-dummy.c: Dummy calls for the LocalDataStoreSlot operations

Thu Sep 27 21:45:55 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* rawbuffer.c: disable mmap on cygwin since it seems to be broken there.

Thu Sep 27 19:52:11 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c, loader.c: warn and return NULL instead of erroring out.
	* icall.c: added System.AppDomain::getCurDomain().
	* loader.c: we don't need to lookup the typedef again for p/invoke calls.

2001-09-25  Dick Porter  <dick@ximian.com>

	* threads-pthread.h:
	* threads-pthread.c: Implemented timed thread joining and added
	System.Threading.Thread::Join_internal internal call

	* icall.c: Added System.Threading.Thread::Join_internal internal call

	* threads-dummy.h:
	* threads-dummy.c: Dummy calls for System.Thread.Thread::Join_internal

Mon Sep 24 18:56:59 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* object.c, object.h: added mono_ldstr (), mono_string_is_interned () and
	mono_string_intern () to implement the semantics of the ldstr opcode
	and the interning of System.Strings.
	* icall.c: provide hooks to make String::IsIntern and String::Intern
	internalcalls.

2001-09-23  Dick Porter  <dick@ximian.com>

	* threads-dummy.c: 
	* threads-dummy.h: New files of dummy threading routines

	* Makefile.am (THREAD_SOURCE): Arrange to compile different thread
	support code based on system specifics

	Rename PTHREAD_LIBS to THREAD_LIBS
	
2001-09-23  Dick Porter  <dick@ximian.com>

	* threads-pthread.c: Implement the System.Threading.Thread::Sleep,
	Schedule (called when asked to Sleep for 0 ms) and CurrentThread
	internal calls.
	(mono_thread_init): Set up a Thread object instance to return when
	the main thread calls Thread.CurrentThread
	(mono_thread_cleanup): Wait for all subthreads to exit

	* icall.c: New internal calls for System.Threading.Thread::Sleep
	(including Schedule) and CurrentThread

	* threads.h: New file, to insulate thread-specific stuff from the
	rest of the code

2001-09-21  Dick Porter  <dick@ximian.com>

	* threads-pthread.h: 
	* threads-pthread.c: New file, for handling pthreads-style
	threading support.  Start() now starts a new thread and executes
	the ThreadStart delegate instance.

	* icall.c: Added the internalcall for
	System.Threading.Thread::Start_internal

	* Makefile.am: Added new files, and PTHREADS_LIBS to the link line

Thu Sep 20 19:37:39 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* loader.c: work around the different signatures for delegates
	constructors csc generates in compiled code vs the ones compiled in mscorlib.

Tue Sep 18 13:16:32 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c: add mono_class_get_field_from_name ().
	* *: Fix C comments and other ANSI C issues.

Mon Sep 10 20:21:34 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* endian.h, assembly.c: fix some endianness issues.

Fri Sep 7 18:40:40 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* loader.h, load.c: add delegate_class to mono_defaults.
	Handle runtime provided methods in mono_get_method ().

2001-08-29  Dietmar Maurer  <dietmar@ximian.com>

	* loader.c (mono_get_method): use pinvoke for internal call

	* icall.c: use pinvoke for internal call

	* loader.c (method_from_memberref): set the method name

Wed Aug 29 12:43:41 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c: help the compiler generate better code for
	mono_class_from_mono_type ().

2001-08-28  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_metadata_init): delayed computing of the
	class size to mono_class_metadata_init ()

Tue Aug 28 15:47:15 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h: add an interfaces member to MonoClass.
	* image.c, image.h: add assembly_name field to MonoImage
	from the assembly table.
	* metadata.c, metadata.h: add mono_metadata_interfaces_from_typedef ().

Mon Aug 27 20:12:01 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c: Handle Array in mono_class_from_mono_type ().
	* metadata.c, pedump.c: some endian fixes.

Mon Aug 27 15:23:23 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c, loader.c, loader.h: More types handled in mono_class_from_mono_type ().
	* metadata.c: fix small problem introduced with the latest commit.

Mon Aug 27 12:17:17 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* loader.c, metadata.c, metadata.h: Export mono_metadata_type_equal().
	We don't need a MonoMetadata pointer anymore to compare signatures in
	mono_metadata_signature_equal (), update callers.
	Reduced memory usage an number of allocations for MonoMethodHeader and
	MonoMethodSignature.

Sun Aug 26 23:03:09 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c: added compare for szarray.

Sun Aug 26 11:34:24 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c, loader.h, loader.c: export mono_class_from_mono_type ()
	and add a couple more types to it and mono_defaults. Give an hint on
	classes that need implementing in our corlib and are referenced
	in mscorlib.

Sat Aug 25 12:52:54 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.h, class.c: keep track if a class is also an Enum.
	* loader.c: Implement a couple more types for use in libffi
	marshalling. Gives better diagnostics when failing to dlopen
	a library. Set method->klass for P/Invoke methods, too.

Fri Aug 24 19:30:25 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* class.c, class.h: add a MonoType this_arg to MonoClass that
	represents a pointer to an object of the class' type that
	can be used by the interpreter and later the type cache.
	Add best guess alignment info for valuetype objects.

Fri Aug 24 15:50:31 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c, class.h, class.c: squeezed MonoParam
	into MonoType: one less level of indirection and allocation and
	simplifies quite a bit of code. Added cache for MonoTypes that are
	used frequently, so that we don't need to allocate them all the time.

2001-08-24  Dietmar Maurer  <dietmar@ximian.com>

	* class.c (mono_class_create_from_typedef): System.Enum is also a
	value type, although it does not derive from System.ValueType
	(maybe a bug in the ms compiler?)

	* metadata.c (mono_type_size): return the right size for value types

	* loader.c (mono_get_method): only initialize method header if not abstract

	* class.c (mono_class_from_mono_type): use mono_default values. 

2001-08-23  Dietmar Maurer  <dietmar@ximian.com>

	* *: use MonoClass pointers instead of <type_tokens>
	
	* class.h: new flag: metadata_inited.

	* class.c (mono_class_metadata_init): impl.
	(mono_class_instance_size): impl.
	(mono_class_data_size): impl.

Wed Aug 22 16:27:30 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c, loader.h, loader.c, image.h, image.c, class.h, class.c:
	MonoClass now has the name and name_space fields. 
	MonoMethod has a pointer to its MonoClass, instead of MonoImage.
	mono_get_method () takes and optional MonoClass as argument.
	Removed mono_typedef_from_name() and added mono_class_token_from_name()
	instead that takes advantage of a map from class names to typedef
	tokens in MonoImage.

Tue Aug 21 18:54:58 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c: zero is not a valid alignment boundary.
	Merge MONO_TYPE_VOID in default decoding code.

2001-08-21  Dietmar Maurer  <dietmar@ximian.com>

	* image.h: merged MonoMetadata into MonoImage

	* class.h: cleanup of MonoArrayClass, use a MonoClass pointer to
	identify the type of elements.

Mon Aug 20 19:39:00 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* blob.h: fix MONO_TYPE_TYPEDBYREF value.
	* cil-coff.h: split MonoMSDOSHeader and add size info.
	* image.c: add some consistency checks.
	* metadata.c: fix row size computation: one programmer
	error and one LAMESPEC. Handle MONO_TYPE_TYPEDBYREF.
	add explanation for the locator routine.
	Fix decoding of size in method header.
	
2001-08-20  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c 	(g_concat_dir_and_file): Use _S for string concat.
	(g_concat_dir_and_file): Bring g_concat_dir_and_file
	function from gnome-libs.  This uses the right path separator
	based on the OS, and also works around a bug in some systems where
	a double slash is not allowed. 
	(default_assembly_name_resolver): Use g_concat_dir_and_file
	(mono_assembly_open): ditto.

2001-08-20  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_metadata_signature_equal): impl.

	* *: void is now a realy MonoType (instead of using NULL)
	
	* metadata.c (do_mono_metadata_parse_type): use
	mono_metadata_parse_type to parse void value.

Sat Aug 18 12:51:28 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c, metadata.h: in the signature and method header store
	only the space required for holding the loca vars and incoming arguments.

2001-08-15  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (do_mono_metadata_parse_type): treat void like any
	other type (instead of assigning NULL);

2001-08-14  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_metadata_parse_mh): fixxed pinned/byref value

2001-08-09  Dietmar Maurer  <dietmar@ximian.com>

	* image.c (do_mono_image_open): added a cache for arrays.

Sat Aug 4 12:46:02 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c: add mono_metadata_decode_row_col () to
	decode a single column from a row in a metadata table and changes
	to take advantage of it in the typedef locator (gives a nice speed up).
	Store offset info for function params.

2001-08-02  Dietmar Maurer  <dietmar@ximian.com>

	* image.h (MONO_IMAGE_IS_CORLIB): removed 

Wed Aug 1 22:54:08 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* assembly.c: how could mono_assembly_close () had ever worked?
	* metadata.c, metadata.h: provide offset info for local vars.
	Implement mono_type_size () to take care of alignment as well
	as size (it was mono_field_type_size in cli/class.c before).

2001-08-01  Dietmar Maurer  <dietmar@ximian.com>

	* image.h (MONO_IMAGE_IS_CORLIB): new macro to check root image

	* assembly.h (CORLIB_NAME): set to corlib.dll

	* assembly.c (mono_assembly_open): replaced strcmp() with !strcmp()

Tue Jul 31 17:54:02 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c, Makefile.am, private.h, assembly.c, blob.h,
	cil-coff.h, image.c, image.h, pedump.c, rawbuffer.c, rawbuffer.h, row-indexes.h,
	tokentype.h: massive namespace cleanup.

Mon Jul 30 20:11:01 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, metadata.c: decode exception clauses when parsing method header.

2001-07-27  Dietmar Maurer  <dietmar@ximian.com>

	* metadata.c (mono_metadata_free_type): added check for type !=
	NULL (void) before calling mono_metadata_free_type()

Thu Jul 26 19:11:19 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, row_indexes.h: added header with enumerations to use
	to index in the columns from tables in metadata and to decode coded
	tokens: we should start using this instead of embedding magic numbers
	all over the code.

Thu Jul 26 13:03:27 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* assembly.c, cil-coff.h, image.c, image.h, pedump.c, typedef.c:
	Move metadata_t info from cli_image_info_t to MonoImage, where
	it's easily accessible. Changed all the uses accordingly.
	Added the method and class caches to MonoImage.
	* metadata.c, metadata.h: Changed mono_metadata_decode_blob_size ()
	and mono_metadata_decode_value () signature to be more consistent
	with the other parse functions (and simplify code). Taken advantage
	of zero-length array allocation with GCC. Removed reduntant (and
	wrong) MonoFieldType struct and use MonoParam instead. Changed
	mono_metadata_parse_field_type () to use common code for parsing.
	Added mono_metadata_typedef_from_field () and
	mono_metadata_typedef_from_method () to lookup a typedef index from a
	field or method token.
	Pack the MonoRetType structure more tightly (fits in 8 bytes now).

2001-07-23  Miguel de Icaza  <miguel@ximian.com>

	* metadata.c (mono_metadata_parse_field_type): Implement. 
	(do_mono_metadata_parse_type): Split engine from
	mono_metadata_parse_type, so that we can create smaller structures
	for things that just have one pointer to the MonoType (look at
	the MonoFieldType)

2001-07-20  Miguel de Icaza  <miguel@ximian.com>

	* metadata.c (mono_metadata_parse_mh): Correct the implementation,
	as Jan Gray found out, it is incorrect. 

2001-07-18  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c: Implement asssembly loading.  This loads an image
	and loads all the referenced assemblies.  Come to think of it, we
	could always do lazy loading of the assemblies. 

	* image.c (mono_image_open): Keep loaded images in a hashtable.

	* image.h (MonoImage): Add reference count.

2001-07-17  Miguel de Icaza  <miguel@ximian.com>

	* assembly.c (mono_assembly_open): Keep track of the file name in
	case the assembly has no ASSEMBLY table.

	* metadata.h: Fixed Paolo's quick hack.  Put the documnentation
	from get.c here.

Sun Jul 15 19:39:06 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.c, metadata.h: decode local vars in method header
	parse function. Change callers accordingly.

Sun Jul 15 17:40:47 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metadata.h, cil-coff.h: protect against multiple inclusion.
	Added some new structures to hold information decoded from metadata:
	MonoType, MonoParam, MonoArray, MonoMethod, MonoMethodSignature
	and relevant decoding/free functions.
	* metadata.c: implement decoding functions. Add warning for out of bounds
	index in mono_metadata_locate(). Implement mono_get_method () to retreive
	all the info about a method signature and invocation. Remove check on
	uninitialized local var in parse_mh() and fix memory leak.

2001-07-12  Miguel de Icaza  <miguel@ximian.com>

	* metadata.h: More macros.

	* tokentype.h: New file.

Fri Jul  6 11:30:53 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* assembly.c: added a consistency check and initialize
	some structures with g_new0().
	* metadata.c: fixed a couple more bugs in table size computation
	and add other checks for out-of bound access to metadata.

Thu Jul  5 22:34:21 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* metatada.c: fix bugs computing table sizes. Spew a
	warning when index in string heap is out of bounds.

2001-07-04  Miguel de Icaza  <miguel@ximian.com>

	* metadata.h: Add a couple of macros to manipulate tokens. 

Tue Jul  3 18:33:32 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* assembly.c: g_free(ii->cli_sections) (and avoid double free of
	cli_section_tables).

2001-07-01  Miguel de Icaza  <miguel@ximian.com>

	* metadata.c (mono_metadata_user_string): New function, provides
	access to the UserString heap. 

2001-06-27  Miguel de Icaza  <miguel@ximian.com>

	* metadata.c: Add inline documentation.

2001-06-26  Miguel de Icaza  <miguel@ximian.com>

	* propertyattr.h, paramattr.h, methodsem.h, methodattr.h: New
	files. 

2001-06-22  Miguel de Icaza  <miguel@ximian.com>

	* typeattr.h: New file, TypeAttribute flags. 

2001-06-21  Miguel de Icaza  <miguel@ximian.com>

	* mono/metadata/assembly.c (mono_assembly_ensure_section_idx,
	mono_assembly_ensure_section): Section loading code.
	(load_section_tables): Load the sections.

	* mono/metadata/metadata.c (mono_metadata_locate_token,
	mono_metadata_locate): Functions to locate the information
	definition given a token or a table and an index.
	(mono_metadata_compute_table_bases): New.
	(compute_size): New function to compute the sizes of the various
	tables.

	* mono/metadata/metadata.h: Finish listing the different index
	types. 

	* mono/metadata/pedump.c: Improve to dump new information.

2001-06-19  Miguel de Icaza  <miguel@ximian.com>

	* mono/metadata/metadata.c: Entered all the tables matching
	Beta2. 

	* mono/metadata/assembly.c (load_metadata_ptrs): Fix for Beta2

