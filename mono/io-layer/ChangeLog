2002-02-20  Dick Porter  <dick@ximian.com>

	* io-layer.h: Always build without cygwin support on windows

Mon Feb 18 15:50:59 CET 2002 Paolo Molaro <lupus@ximian.com>

	* sockets.c: #undef DEBUG.

2002-02-14  Jeffrey Stedfast  <fejj@ximian.com>

	* io-layer.h: conditionally include sys/filio.h and sys/sockio.h
	for FIONBIO, FIONREAD, and SIOCATMARK.

2002-02-14  Jeffrey Stedfast  <fejj@ximian.com>

	* sockets.c: conditionally include sys/filio.h and sys/sockio.h
	for FIONBIO, FIONREAD, and SIOCATMARK.

2002-02-13  Dick Porter  <dick@ximian.com>

	* sockets.c: Implement shutdown and select

2002-02-13  Jeffrey Stedfast  <fejj@ximian.com>

	* mono-mutex.[c,h]: New source files that thinly wrap all pthread
	functions that take pthread_mutex_t and/or pthread_mutexattr_t
	arguments for the sake of portability. Implements recursive
	mutexes and pthread_mutex_timedlock.

	* critical-sections.c:
	* events.c:
	* handles.c:
	* mutexes.c:
	* semaphores.c:
	* threads.c:
	* timed-thread.c:
	* wait.c: Use the mono-mutex wrapper portability functions/macros.

	* pthread-compat.[c,h]: Replaced by mono-mutex.[c,h]

2002-01-23  Dick Porter  <dick@ximian.com>

	* sockets.c: Networking support, mostly wrapping BSD socket APIs
	with handle code, and translating errno into w32 error codes.

	* macros.h: Some w32 macros used with the socket support

	* error.c: Implemented GetLastError() and SetLastError()

	* Makefile.am: Added sockets, with kludge to override some symbols

2001-12-17  Dietmar Maurer  <dietmar@ximian.com>

	* unicode.c (_wapi_unicode_to_utf8): byteswap UTF16 strings before
	passing them to iconv
	(_wapi_unicode_to_utf8): only swap bytes on LE systems, remove bug
	from previous commit.

2001-12-11  Dick Porter  <dick@ximian.com>

	* io.c: Implement DeleteFile(), GetFileTime(), SetFileTime() and
	FileTimeToSystemTime().

	* unicode.c (unicode_len): Nasty way of finding length of unicode
	string with embedded NULLs (counts until two NULLs together).

	* mutexes.c (mutex_close): 
	* events.c (event_close): Release the internal pthreads resources

2001-11-26  Dick Porter  <dick@ximian.com>

	* critical-sections.c:
	* events.c:
	* handles.c:
	* io.c:
	* mutexes.c:
	* semaphores.c:
	* threads.c:
	* timed-thread.c:
	* wait.c: turn off DEBUG messages

2001-11-22  Dick Porter  <dick@ximian.com>

	* handles.c (SignalObjectAndWait): Implement

	* wait.c (WaitForSingleObject): Fix case where timeout == 0

	* threads.c:
	* semaphores.c:
	* mutexes.c:
	* io.c:
	* events.c: Support for SignalObjectAndWait
	
2001-11-21  Dick Porter  <dick@ximian.com>

	* events.c:
	* handles.c:
	* mutexes.c:
	* semaphores.c:
	* threads.c:
	* wait.c: Reliable method of returning which handle was signalled
	on return from WaitForMultipleObjects().

2001-11-21  Dick Porter  <dick@ximian.com>

	* events.c: Implement events

2001-11-15  Dick Porter  <dick@ximian.com>

	* mutexes.c: Implement mutexes

	* threads.c: 
	* semaphores.c: 
	* misc.c: Factor out some common code

2001-11-13  Dick Porter  <dick@ximian.com>

	* threads.c: Implement TLS.  Implement GetCurrentThreadId(), and
	GetCurrentThread() by maintaining a hash of thread handles.

	* threads.h: Define thread and process creation flags

2001-11-12  Dick Porter  <dick@ximian.com>

	* critical-sections.c: Implement critical sections

2001-11-12  Dick Porter  <dick@ximian.com>

	* semaphores.c: Implement semaphores

	* wait.c (wait_for_item): Maintain a wait count rather than count
	signalled booleans.

	* threads.c (thread_wait_multiple): Don't lock the wait item, that
	will block other wait threads

2001-11-11  Dick Porter  <dick@ximian.com>

	* Makefile.am: Rename some automake variables
	(from Nick Drochak <ndrochak@gol.com>)

2001-11-10  Dick Porter  <dick@ximian.com>

	* Makefile.am (libwapiincludedir): Fix include destination

	* .cvsignore: Ignore generated files

2001-11-10  Dietmar Maurer  <dietmar@ximian.com>

	* pthread-compat.c: added some include files to make it compile on
	linux.

2001-11-08  Dick Porter  <dick@ximian.com>

	* Initial checkin.

	This is a library emulating the win32 threading and IO API.


